<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[用python进行抢课]]></title>
      <url>http://yoursite.com/2018/09/08/%E7%94%A8python%E8%BF%9B%E8%A1%8C%E6%8A%A2%E8%AF%BE/</url>
      <content type="html"><![CDATA[<h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>我们通过模拟浏览器请求的方式来模拟登录选课系统。</p>
<p>以我们学校信息门户为例，随机输入账号、密码，打开开发者工具，对数据进行分析：</p>


<p>哇哇哇哇哇哇哇哇哇哇哇哇哇哇哇哇哇哇哇</p>
<a id="more"></a>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[github hexo博客搭建]]></title>
      <url>http://yoursite.com/2018/09/08/github%20hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/</url>
      <content type="html"><![CDATA[<h2 id="创建Github-io"><a href="#创建Github-io" class="headerlink" title="创建Github.io"></a>创建Github.io</h2><p>本文默认的前提为你会使用Git，如不会使用Git或没有Github账号，请参考廖雪峰的Git教程</p>
<p>要在github上搭建github pages，需要在你的github下新建一个名为[username].github.io的仓库，其中username是你的用户名(或组织名称)。注意: 如果username与你的用户名不同将无法成功。</p>
<p>在电脑自定义的位置新建一个文件夹如github.io，然后进入github.io文件夹执行git初始化命令并克隆github.io仓库：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ git init</div><div class="line">$ git clone https://github.com/username/username.github.io</div></pre></td></tr></table></figure>
<a id="more"></a>
<p>进入项目文件夹并增加一个index.html文件:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ cd username.github.io</div><div class="line">$ echo &quot;Hello World&quot; &gt; index.html</div></pre></td></tr></table></figure></p>
<p>将你的github.com/username/username.github.io设置一个名称，假设为blog:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git remote add blog git@github.com:username/username.github.io.git</div></pre></td></tr></table></figure>
<p>执行add,commit操作并push到你的blog仓库，注意，请确认你是否push到了正确的仓库:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ git add -A</div><div class="line">$ git commit -m &quot;Initial Commit&quot;</div><div class="line">$ git push blog master</div></pre></td></tr></table></figure>
<p>如果出现错误，不能push，请尝试先进行pull，再进行push操作:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git pull blog master</div></pre></td></tr></table></figure>
<p>当你的username.github.io仓库中存在index.html时，访问你的博客页面，如username.github.io，可以看到页面上出现“Hello World”，你就拥有了一个自己的github博客。</p>
<h2 id="使用Hexo作博客模板"><a href="#使用Hexo作博客模板" class="headerlink" title="使用Hexo作博客模板"></a>使用Hexo作博客模板</h2><p>当然不是每个人都有时间去写博客页面或管理自己的博客，此时即可借助Hexo来帮你管理和生成你的博客。</p>
<p>在安装Hexo之前，请确保你的电脑中安装有node.js，否则可能出现错误:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">init env: node: No such file or directory</div></pre></td></tr></table></figure>
<p>若电脑中没有node.js，前往nodejs的官方网站下载，本人使用的是v4.4.7 LTS版本。下载完成后，运行安装程序即可完成安装，安装node.js后也安装好了npm。</p>
<p>安装Hexo<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo npm install -g hexo</div></pre></td></tr></table></figure></p>
<p>部署Hexo<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo init</div></pre></td></tr></table></figure></p>
<p>这个命令会初始化博客目录，执行命令时在你想要创建的目录下执行，此时该目录下会生成以下文件:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">.</div><div class="line">   ├── .deploy</div><div class="line">   ├── public</div><div class="line">   ├── scaffolds</div><div class="line">   ├── scripts</div><div class="line">   ├── source</div><div class="line">   |   ├── _drafts</div><div class="line">   |   └── _posts</div><div class="line">   ├── themes</div><div class="line">   ├── _config.yml</div><div class="line">   └── package.json</div></pre></td></tr></table></figure>
<p>文件说明:<br>    .deploy：执行hexo deploy命令部署到GitHub上的内容目录<br>    public：执行hexo generate命令，输出的静态网页内容目录<br>    scaffolds：layout模板文件目录，其中的md文件可以添加编辑<br>    scripts：扩展脚本目录，这里可以自定义一些javascript脚本<br>    source：文章源码目录，该目录下的markdown和html文件均会被hexo处理。该页面对应repo的根目录，404文件、favicon.ico文件，CNAME文件等都应该放这里，该目录下可新建页面目录。<br>    _drafts：草稿文章<br>    _posts：发布文章<br>    themes：主题文件目录<br>    _config.yml：全局配置文件，大多数的设置都在这里<br>    package.json：应用程序数据，指明hexo的版本等信息，类似于一般软件中的关于按钮</p>
<p>你可以尝试使用运行hexo服务器并在浏览器中打开来检查Hexo是否正常工作:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure></p>
<h2 id="将Hexo的模板应用到github-io"><a href="#将Hexo的模板应用到github-io" class="headerlink" title="将Hexo的模板应用到github.io"></a>将Hexo的模板应用到github.io</h2><p>在hexo中有两个_config.yml文件，一个位于hexo的根目录下，我们称之为全局配置文件，另一个位于/themes/landscape/_config.yml，称之为主题配置文件。</p>
<p>打开全局配置文件_config.yml，你需要注意的配置有:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">title: title    #博客名</div><div class="line">subtitle: subtitle  #博客副标题</div><div class="line">description:          #网站描述, 用于爬虫抓取的关键词</div><div class="line">author: author    #作者名称</div><div class="line">email: email  #作者邮箱</div><div class="line">language: zh-CN       #网页编码,中文</div><div class="line">root: /			# 一定要从/开始，否则与github.io不能同步路径</div><div class="line">deploy:</div><div class="line">  type: github    #部署类型Github</div><div class="line">  repository: git@github.com:username/username.github.io.git </div><div class="line">  branch: master   #部署分支,一般使用master主分支</div></pre></td></tr></table></figure></p>
<p>保存设置后执行命令:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-deployer-git --save</div></pre></td></tr></table></figure></p>
<p>随后将hexo下的模板文件同步到github:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo deploy</div></pre></td></tr></table></figure></p>
<p>稍等片刻，打开你的username.github.io，应当可以看到hexo的模板页面。</p>
<h2 id="常用操作"><a href="#常用操作" class="headerlink" title="常用操作"></a>常用操作</h2><h3 id="新增文章"><a href="#新增文章" class="headerlink" title="新增文章"></a>新增文章</h3><p>使用如下命令后在hexo根目录中/source/_posts/目录下新增一个new-article.md文本:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new &apos;new-article&apos;</div></pre></td></tr></table></figure></p>
<p>编辑该文件，以markdown格式书写自己的博文。关于markdown的使用方法请参考Markdown语法说明(简体中文版)。编辑时，可启动hexo本地服务器实时查看页面效果:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure></p>
<p>编辑完成后，使用如下命令发布到github上:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ hexo clean		# 清理原有文件，以防与新文件冲突</div><div class="line">$ hexo generate		# 生成静态站点文件</div><div class="line">$ hexo deploy		# 发布到github pages上</div></pre></td></tr></table></figure></p>
<p>完成操作后，稍等十秒(github pages更新有延迟)，刷新github pages页面查看页面效果</p>
<h3 id="删除文章"><a href="#删除文章" class="headerlink" title="删除文章"></a>删除文章</h3><p>直接删除本地hexo目录下/source/_posts/中的md文件，再执行清理、生成静态站点文件、发布操作即可。命令参考”新增文章”。</p>
<h2 id="更换模板"><a href="#更换模板" class="headerlink" title="更换模板"></a>更换模板</h2><p>官方默认的主题为landscape主题，主题存放于themes文件夹中，可以更改全局配置文件来更换为需要的主题。</p>
<h3 id="选择主题"><a href="#选择主题" class="headerlink" title="选择主题"></a>选择主题</h3><p>官方提供了许多主题，可自行选择喜欢的主题并下载。以我使用的是next主题为例。首先需要将主题文件下载下来(在Downloads分类下)，解压后存放于themes目录下，并将文件夹名称简化为next。</p>
<h3 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h3><p>打开全局配置文件，找到theme字段，将其更改为next，验证主题是否启动:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo s --debug</div></pre></td></tr></table></figure></p>
<h4 id="选择-Scheme"><a href="#选择-Scheme" class="headerlink" title="选择 Scheme"></a>选择 Scheme</h4><p>NexT通过Scheme提供主题中的主题。Mist是NexT的第一款Scheme。启用Mist仅需在主题配置文件中将 #scheme: Mist 前面的#注释去掉即可。</p>
<h4 id="语言设置"><a href="#语言设置" class="headerlink" title="语言设置"></a>语言设置</h4><p>编辑全局配置文件，将 language 设置成需要的语言。例如选用正体中文，则配置为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">language: zh-Hans</div></pre></td></tr></table></figure></p>
<p>可用的语言如以下表格所示：</p>
<table>
<thead>
<tr>
<th>语言</th>
<th>代码</th>
<th>设定值</th>
</tr>
</thead>
<tbody>
<tr>
<td>English</td>
<td>en</td>
<td>language: en</td>
</tr>
<tr>
<td>简体中文</td>
<td>zh-Hans</td>
<td>language: zh-Hans</td>
</tr>
<tr>
<td>French</td>
<td>fr-FR</td>
<td>language: fr-FR</td>
</tr>
<tr>
<td>正体中文</td>
<td>zh-hk/zh-tw</td>
<td>language: zh-hk</td>
</tr>
<tr>
<td>Russian</td>
<td>ru</td>
<td>language: ru</td>
</tr>
<tr>
<td>German</td>
<td>de</td>
<td>language: de</td>
</tr>
</tbody>
</table>
<h4 id="菜单配置"><a href="#菜单配置" class="headerlink" title="菜单配置"></a>菜单配置</h4><p>菜单配置在主题配置文件的menu。若站点运行在子目录中，请将链接前缀的/去掉。默认支持的菜单项有：</p>
<table>
<thead>
<tr>
<th>键值</th>
<th>设定值</th>
<th>comment</th>
</tr>
</thead>
<tbody>
<tr>
<td>home</td>
<td>archives: /archives</td>
<td>归档页</td>
</tr>
<tr>
<td>archives</td>
<td>zh-Hans</td>
<td>language: zh-Hans</td>
</tr>
<tr>
<td>categories</td>
<td>categories: /categories</td>
<td>分类页（需手动创建）</td>
</tr>
<tr>
<td>tags</td>
<td>tags: /tags</td>
<td>关于页面 （需手动创建）</td>
</tr>
<tr>
<td>about</td>
<td>about: /about</td>
<td>language: ru</td>
</tr>
<tr>
<td>commonweal</td>
<td>commonweal: /404.html</td>
<td>公益 404 （需手动创建）</td>
</tr>
</tbody>
</table>
<p>菜单配置示例:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">menu:</div><div class="line">  home: /</div><div class="line">  archives: /archives</div><div class="line">  #about: /about</div><div class="line">  #categories: /categories</div><div class="line">  tags: /tags</div><div class="line">  #commonweal: /404.html</div></pre></td></tr></table></figure></p>
<h4 id="侧栏设置"><a href="#侧栏设置" class="headerlink" title="侧栏设置"></a>侧栏设置</h4><p>默认情况下，侧栏仅在文章页面（拥有目录列表）时才显示。可以通过修改主题配置文件中的 sidebar 字段来控制侧栏的行为。</p>
<p>支持的选项有：</p>
<p>post - 默认行为，在文章页面（拥有目录列表）时显示<br>always - 在所有页面中都显示<br>hide - 在所有页面中都隐藏（可以手动展开）</p>
<p>侧栏示例配置：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sidebar: post</div></pre></td></tr></table></figure></p>
<h4 id="头像设置"><a href="#头像设置" class="headerlink" title="头像设置"></a>头像设置</h4><p>编辑主题配置文件，新增字段 avatar，值设置成头像的链接地址。</p>
<p>其中，头像的链接地址可以是完整网络图片url，或站内文件。其中站内文件的url与图片放置位置如下:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">/uploads/avatar.jpg - 需要将头像图片放置在站点的source/uploads/（可能需要新建uploads目录）</div><div class="line">/images/avatar.jpg - 需要将头像图片放置在主题的source/images/目录下|</div></pre></td></tr></table></figure>
<p>头像配置示例:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">avatar: https://avatars1.githubusercontent.com/u/32269?v=3&amp;s=460</div></pre></td></tr></table></figure>
<h4 id="作者名称"><a href="#作者名称" class="headerlink" title="作者名称"></a>作者名称</h4><p>编辑全局配置文件，设置 author 为作者的昵称。</p>
<h4 id="站点描述设置"><a href="#站点描述设置" class="headerlink" title="站点描述设置"></a>站点描述设置</h4><p>编辑全局配置文件，设置 description 字段为你的站点描述。</p>
<h2 id="开启”分类”边栏入口"><a href="#开启”分类”边栏入口" class="headerlink" title="开启”分类”边栏入口"></a>开启”分类”边栏入口</h2><p>为Hexo添加分类页面的index.html，并在其菜单中显示各分类的链接</p>
<p>第一步:新建一个页面，命名为categories:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new page categories</div></pre></td></tr></table></figure></p>
<p>第二步:编辑新建的md文件，将页面类型设置为”categories”，主题将自动为这个页面显示所有的分类:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">title: 分类</div><div class="line">date: 2014-12-22 12:39:04</div><div class="line">type: &quot;categories&quot;</div><div class="line">---</div></pre></td></tr></table></figure></p>
<p>注意: 如果有启动多说或Disqus评论，默认的页面也会带有评论。如果需要关闭可以将字段comments设置为false:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">title: 分类</div><div class="line">date: 2014-12-22 12:39:04</div><div class="line">type: &quot;categories&quot;</div><div class="line">comments: false</div><div class="line">---</div></pre></td></tr></table></figure>
<p>第三步:编辑主题配置文件_config.yml，将menu中的categories:/categories注释去掉:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">menu:</div><div class="line">  home: /</div><div class="line">  categories: /categories</div><div class="line">  archives: /archives</div><div class="line">  tags: /tags</div></pre></td></tr></table></figure>
<p>第四步:清空缓存、生成静态文件、发布/预览:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ hexo clean</div><div class="line">$ hexo generate</div><div class="line">$ hexo deploy	# 发布</div><div class="line">$ hexo server	# 打开本地服务器在页面上预览</div></pre></td></tr></table></figure></p>
<h2 id="开启”关于我”边栏入口"><a href="#开启”关于我”边栏入口" class="headerlink" title="开启”关于我”边栏入口"></a>开启”关于我”边栏入口</h2><p>新建一个about页面:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new page &apos;about&apos;</div></pre></td></tr></table></figure>
<p>修改主题配置文件，将menu下的about:/about/注释取消即可:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">menu:</div><div class="line">  home: /</div><div class="line">  archives: /archives</div><div class="line">  tags: /tags</div><div class="line">  about: /about</div></pre></td></tr></table></figure>
<p>更改menu中项目的顺序可更改在菜单中显示的顺序。</p>
<h2 id="设置侧边栏社交链接"><a href="#设置侧边栏社交链接" class="headerlink" title="设置侧边栏社交链接"></a>设置侧边栏社交链接</h2><p>编辑主题配置文件_config.yml，找到字段social，删除注释并添加社交站点名称与地址，如下:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"># Social links</div><div class="line">social:</div><div class="line">  github: https://github.com/your-user-name</div><div class="line">  twitter: https://twitter.com/your-user-name</div><div class="line">  weibo: http://weibo.com/your-user-name</div><div class="line">  douban: http://douban.com/people/your-user-name</div><div class="line">  zhihu: http://www.zhihu.com/people/your-user-name</div></pre></td></tr></table></figure>
<h2 id="接入Google统计脚本"><a href="#接入Google统计脚本" class="headerlink" title="接入Google统计脚本"></a>接入Google统计脚本</h2><p>步骤一:</p>
<p>注册Google账户，登陆后访问Google Analytics，按照提示填写网站信息开通GA服务，获取统计ID。</p>
<p>步骤二:</p>
<p>编辑主题配置文件，找到字段google_analytics，删除注释并填写统计ID:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">google_analytics: your-analytics-id</div></pre></td></tr></table></figure></p>
<p>步骤三:</p>
<p>进入GA数据查看页查看会话数、用户数、浏览量、平均会话时长、跳出率等信息</p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[那些年和流氓主页的斗智斗勇]]></title>
      <url>http://yoursite.com/2017/10/08/%E9%82%A3%E4%BA%9B%E5%B9%B4%E5%92%8C%E6%B5%81%E6%B0%93%E4%B8%BB%E9%A1%B5%E7%9A%84%E6%96%97%E6%99%BA%E6%96%97%E5%8B%87/</url>
      <content type="html"><![CDATA[<h2 id="AdwCleaner"><a href="#AdwCleaner" class="headerlink" title="AdwCleaner"></a><strong>AdwCleaner</strong></h2><p>广告清除软件，很方便，不过会把桌面版QQ清除。</p>
<h2 id="WMI-tool"><a href="#WMI-tool" class="headerlink" title="WMI tool"></a><strong>WMI tool</strong></h2><p>快捷方式中加入网址地址，且手动删除后隔一段时间就被修改适合该方法。</p>
<p>下载WMI tool，之后打开WMI Event Viewer：<br><a id="more"></a><br><img src="https://arlenluo.github.io/images/post6/L3.jpg" alt="WMI Event Viewer1"></p>
<p>点击左上角的笔的图标（Register For Events），在弹出的Connect to namespace的框直接点OK，Login的页面也直接点OK。点开左侧栏的EventFilter，再点击下级目录的项目：</p>
<p><img src="https://arlenluo.github.io/images/post6/L4.jpg" alt="WMI Event Viewer2"></p>
<p>在右侧栏右键点击ActiveScriptEventConsumer，并通过view instant properties查看属性：</p>
<p><img src="https://arlenluo.github.io/images/post6/L5.jpg" alt="WMI Event Viewer3"></p>
<p>在Script Text那一栏我们可以看到这段脚本：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line">On <span class="built_in">Error</span> Resume Next:</div><div class="line"></div><div class="line">Const link = <span class="string">"http://hao934.com/?r=ggggg&amp;m=a296"</span>:</div><div class="line">Const link360 = <span class="string">"http://hao934.com/?r=ggggg&amp;m=a296&amp;s=3"</span>:</div><div class="line">browsers = <span class="string">"114ie.exe,115chrome.exe,1616browser.exe,2345chrome.exe,2345explorer.exe,360se.exe,360chrome.exe,avant.exe,baidubrowser.exe,chgreenbrowser.exe,chrome.exe,firefox.exe,greenbrowser.exe,iexplore.exe,juzi.exe,kbrowser.exe,launcher.exe,liebao.exe,maxthon.exe,niuniubrowser.exe,qqbrowser.exe,sogouexplorer.exe,srie.exe,tango3.exe,theworld.exe,tiantian.exe,twchrome.exe,ucbrowser.exe,webgamegt.exe,xbrowser.exe,xttbrowser.exe,yidian.exe,yyexplorer.exe"</span>:</div><div class="line">lnkpaths = <span class="string">"C:\Users\Public\Desktop,C:\ProgramData\Microsoft\Windows\Start Menu\Programs,C:\Users\Jiayutong\Desktop,C:\Users\Jiayutong\AppData\Roaming\Microsoft\Internet Explorer\Quick Launch,C:\Users\Jiayutong\AppData\Roaming\Microsoft\Internet Explorer\Quick Launch\User Pinned\StartMenu,C:\Users\Jiayutong\AppData\Roaming\Microsoft\Internet Explorer\Quick Launch\User Pinned\TaskBar,C:\Users\Jiayutong\AppData\Roaming\Microsoft\Windows\Start Menu\Programs"</span>:</div><div class="line">browsersArr = split(browsers,<span class="string">","</span>):</div><div class="line"><span class="built_in">Set</span> oDic = CreateObject(<span class="string">"scripting.dictionary"</span>):</div><div class="line">For Each browser In browsersArr:</div><div class="line">    oDic.Add LCase(browser), <span class="attr">browser</span>:</div><div class="line">Next:</div><div class="line">lnkpathsArr = split(lnkpaths,<span class="string">","</span>):</div><div class="line"><span class="built_in">Set</span> oFolders = CreateObject(<span class="string">"scripting.dictionary"</span>):</div><div class="line">For Each lnkpath In lnkpathsArr:</div><div class="line">    oFolders.Add lnkpath, <span class="attr">lnkpath</span>:</div><div class="line">Next:</div><div class="line"><span class="built_in">Set</span> fso = CreateObject(<span class="string">"Scripting.Filesystemobject"</span>):</div><div class="line"><span class="built_in">Set</span> WshShell = CreateObject(<span class="string">"Wscript.Shell"</span>):</div><div class="line">For Each oFolder In oFolders:</div><div class="line">    If fso.FolderExists(oFolder) Then:</div><div class="line">        For Each file In fso.GetFolder(oFolder).Files:</div><div class="line">        If LCase(fso.GetExtensionName(file.Path)) = <span class="string">"lnk"</span> Then:</div><div class="line">            <span class="built_in">Set</span> oShellLink = WshShell.CreateShortcut(file.Path):</div><div class="line">            path = oShellLink.TargetPath:</div><div class="line">            name = fso.GetBaseName(path) &amp; <span class="string">"."</span> &amp; fso.GetExtensionName(path):</div><div class="line">            If oDic.Exists(LCase(name)) Then:</div><div class="line">                If LCase(name) = LCase(<span class="string">"360se.exe"</span>) Then:</div><div class="line">                    oShellLink.Arguments = link360:</div><div class="line">                Else:</div><div class="line">                    oShellLink.Arguments = link:</div><div class="line">                End If:</div><div class="line">                If file.Attributes And <span class="number">1</span> Then:</div><div class="line">                    file.Attributes = file.Attributes - <span class="number">1</span>:</div><div class="line">                End If:</div><div class="line">                oShellLink.Save:</div><div class="line">            End If:</div><div class="line">        End If:</div><div class="line">        Next:</div><div class="line">    End If:</div><div class="line">Next:</div></pre></td></tr></table></figure>
<p>终于抓到了幕后黑手。可以看到这是一段VBScript代码，攻击目标涵盖了包括Chrome、360、Firefox、搜狗等30余种常见的浏览器。脚本以浏览器的安装地址为切入点，创建WshShell对象，进而生成植入了流氓网站的快捷方式。360浏览器有限定主页格式，于是这段脚本还特地修饰了流氓网站的链接。唉，流氓至此，也是服了。</p>
<p>查到了源头如何清清除这段造孽的脚本呢？直接在WMI Event Viewer中将_EventFilter.Name=”VBScriptKids_filter”右键删掉会被系统拒绝掉，需要去WMI Event Viewer的安装位置，右键以管理员方式运行exe文件才能删掉。之后还要把各个快捷方式都改回不带流氓网站的版本，包括桌面上的、开始菜单里的以及快速访问栏里的快捷方式，其中开始菜单里的快捷方式要去C:\ProgramData\Microsoft\Windows\Start Menu\Programs里改掉。</p>
]]></content>
      
        <categories>
            
            <category> 软件 </category>
            
            <category> 流氓软件 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[贪心算法]]></title>
      <url>http://yoursite.com/2017/07/24/%E8%B4%AA%E5%BF%83%E7%AE%97%E6%B3%95/</url>
      <content type="html"><![CDATA[<h2 id="题目1437：To-Fill-or-Not-to-Fill"><a href="#题目1437：To-Fill-or-Not-to-Fill" class="headerlink" title="题目1437：To Fill or Not to Fill"></a><strong>题目1437：To Fill or Not to Fill</strong></h2><h3 id="题目描述："><a href="#题目描述：" class="headerlink" title="题目描述："></a>题目描述：</h3><p>With highways available, driving a car from Hangzhou to any other city is easy. But since the tank capacity of a car is limited, we have to find gas stations on the way from time to time. Different gas station may give different price. You are asked to carefully design the cheapest route to go.<br><a id="more"></a></p>
<h3 id="输入："><a href="#输入：" class="headerlink" title="输入："></a>输入：</h3><p>For each case, the first line contains 4 positive numbers: Cmax (&lt;= 100), the maximum capacity of the tank; D (&lt;=30000), the distance between Hangzhou and the destination city; Davg (&lt;=20), the average distance per unit gas that the car can run; and N (&lt;= 500), the total number of gas stations. Then N lines follow, each contains a pair of non-negative numbers: Pi, the unit gas price, and Di (&lt;=D), the distance between this station and Hangzhou, for i=1,…N. All the numbers in a line are separated by a space.</p>
<h3 id="输出："><a href="#输出：" class="headerlink" title="输出："></a>输出：</h3><p>For each test case, print the cheapest price in a line, accurate up to 2 decimal places. It is assumed that the tank is empty at the beginning. If it is impossible to reach the destination, print “The maximum travel distance = X” where X is the maximum possible distance the car can run, accurate up to 2 decimal places.</p>
<h3 id="样例输入："><a href="#样例输入：" class="headerlink" title="样例输入："></a>样例输入：</h3><p>50 1300 12 8<br>6.00 1250<br>7.00 600<br>7.00 150<br>7.10 0<br>7.20 200<br>7.50 400<br>7.30 1000<br>6.85 300<br>50 1300 12 2<br>7.10 0<br>7.00 600</p>
<h3 id="样例输出："><a href="#样例输出：" class="headerlink" title="样例输出："></a>样例输出：</h3><p>749.17<br>The maximum travel distance = 1200.00</p>
<h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iomanip&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">struct</span> station &#123;</div><div class="line">	<span class="keyword">double</span> price;</div><div class="line">	<span class="keyword">int</span> dis;</div><div class="line">	<span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (<span class="keyword">const</span> station &amp;A) <span class="keyword">const</span> &#123;</div><div class="line">		<span class="keyword">return</span> dis &lt; A.dis;</div><div class="line">	&#125;</div><div class="line">&#125;;</div><div class="line">station sta[<span class="number">501</span>];</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</div><div class="line">	<span class="keyword">int</span> cmax, d, davg, n;</div><div class="line">	<span class="keyword">int</span> nowP, next;</div><div class="line">	<span class="keyword">double</span> ans, nowC;</div><div class="line">	<span class="keyword">while</span> (<span class="built_in">cin</span> &gt;&gt; cmax &gt;&gt; d &gt;&gt; davg &gt;&gt; n) &#123;</div><div class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</div><div class="line">			<span class="built_in">cin</span> &gt;&gt; sta[i].price &gt;&gt; sta[i].dis;</div><div class="line">		sta[n].price = <span class="number">0</span>;</div><div class="line">		sta[n].dis = d;</div><div class="line">		sort(sta, sta + n + <span class="number">1</span>);</div><div class="line">		<span class="keyword">if</span> (sta[<span class="number">0</span>].dis &gt; <span class="number">0</span>) &#123;</div><div class="line">			<span class="built_in">cout</span> &lt;&lt; <span class="string">"The maximum travel distance = 0.00"</span> &lt;&lt; <span class="built_in">endl</span>;</div><div class="line">			<span class="keyword">continue</span>;</div><div class="line">		&#125;</div><div class="line">		nowP = <span class="number">0</span>;</div><div class="line">		ans = <span class="number">0</span>;</div><div class="line">		nowC = <span class="number">0</span>;</div><div class="line">		<span class="keyword">while</span> (<span class="number">1</span>) &#123;</div><div class="line">			<span class="keyword">if</span> (nowP == n)</div><div class="line">				<span class="keyword">break</span>;</div><div class="line">			<span class="keyword">if</span> (sta[nowP + <span class="number">1</span>].dis - sta[nowP].dis &gt; cmax*davg) &#123;</div><div class="line">				ans = <span class="number">-1</span>;</div><div class="line">				<span class="keyword">break</span>;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">int</span> t = nowP;</div><div class="line">			next = nowP;</div><div class="line">			<span class="comment">// 查找最近的价格比当前节点便宜的加油站</span></div><div class="line">			<span class="keyword">while</span> (sta[t].dis - sta[nowP].dis &lt;= cmax*davg&amp;&amp;t &lt;= n) &#123;</div><div class="line">				<span class="keyword">if</span> (sta[t].price &lt; sta[nowP].price) &#123;</div><div class="line">					next = t;</div><div class="line">					<span class="keyword">break</span>;</div><div class="line">				&#125;</div><div class="line">				t++;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">if</span> (next &gt; nowP) &#123;</div><div class="line">				ans += sta[nowP].price*(sta[next].dis - sta[nowP].dis - nowC*davg) / <span class="keyword">double</span>(davg);</div><div class="line">				nowC = <span class="number">0</span>;</div><div class="line">				nowP = next;</div><div class="line">				<span class="keyword">continue</span>;</div><div class="line">			&#125;</div><div class="line">			<span class="comment">// 可达范围内没有更便宜的节点，则寻找除当前节点外更便宜的节点</span></div><div class="line">			<span class="keyword">double</span> p = <span class="number">100000000</span>;</div><div class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> i = nowP + <span class="number">1</span>; i &lt; t; i++) &#123;</div><div class="line">				<span class="keyword">if</span> (sta[i].price &lt; p) &#123;</div><div class="line">					next = i;</div><div class="line">					p = sta[i].price;</div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line">			ans += sta[nowP].price*(cmax - nowC);</div><div class="line">			nowC = cmax - (sta[next].dis - sta[nowP].dis) / <span class="keyword">double</span>(davg);</div><div class="line">			nowP = next;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span> (ans == <span class="number">-1</span>)</div><div class="line">			<span class="built_in">cout</span> &lt;&lt; fixed &lt;&lt; setprecision(<span class="number">2</span>) &lt;&lt; <span class="string">"The maximum travel distance = "</span> &lt;&lt; <span class="keyword">double</span>(sta[nowP].dis + cmax*davg) &lt;&lt; <span class="built_in">endl</span>;</div><div class="line">		<span class="keyword">else</span></div><div class="line">			<span class="built_in">cout</span> &lt;&lt; fixed &lt;&lt; setprecision(<span class="number">2</span>) &lt;&lt; ans &lt;&lt; <span class="built_in">endl</span>;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> ACM算法 </category>
            
            <category> 贪心算法 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 九度OJ </tag>
            
            <tag> 贪心算法 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Jobdu 大杂烩]]></title>
      <url>http://yoursite.com/2017/05/05/jobdu/</url>
      <content type="html"><![CDATA[<h2 id="1202-排序"><a href="#1202-排序" class="headerlink" title="1202:排序"></a><strong>1202:排序</strong></h2><h3 id="题目描述："><a href="#题目描述：" class="headerlink" title="题目描述："></a>题目描述：</h3><p>对输入的n个数进行排序并输出。</p>
<h3 id="输入："><a href="#输入：" class="headerlink" title="输入："></a>输入：</h3><p>输入的第一行包括一个整数n(1&lt;=n&lt;=100)。</p>
<p>接下来的一行包括n个整数。</p>
<h3 id="输出："><a href="#输出：" class="headerlink" title="输出："></a>输出：</h3><p>可能有多组测试数据，对于每组数据，将排序后的n个整数输出，每个数后面都有一个空格。</p>
<p>每组测试数据的结果占一行。<br><a id="more"></a></p>
<h3 id="样例输入："><a href="#样例输入：" class="headerlink" title="样例输入："></a>样例输入：</h3><p>4<br>1 4 3 2</p>
<h3 id="样例输出："><a href="#样例输出：" class="headerlink" title="样例输出："></a>样例输出：</h3><p>1 2 3 4<br><!--more--></p>
<h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">    <span class="keyword">int</span> n,i;</div><div class="line">    <span class="keyword">int</span> a[<span class="number">100</span>];</div><div class="line"></div><div class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;n)&#123;</div><div class="line">        <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)</div><div class="line">            <span class="built_in">cin</span>&gt;&gt;a[i];</div><div class="line">        sort(a,a+n);</div><div class="line">        <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)</div><div class="line">            <span class="built_in">cout</span>&lt;&lt;a[i]&lt;&lt;<span class="string">" "</span>;</div><div class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"><span class="comment">/**************************************************************</span></div><div class="line">    Problem: 1202</div><div class="line">    User: ttinch</div><div class="line">    Language: C++</div><div class="line">    Result: Accepted</div><div class="line">    Time:50 ms</div><div class="line">    Memory:1520 kb</div><div class="line">****************************************************************/</div></pre></td></tr></table></figure>
<h2 id="1061-成绩排序"><a href="#1061-成绩排序" class="headerlink" title="1061:成绩排序"></a><strong>1061:成绩排序</strong></h2><h3 id="题目描述：-1"><a href="#题目描述：-1" class="headerlink" title="题目描述："></a>题目描述：</h3><p>有N个学生的数据，将学生数据按成绩高低排序，如果成绩相同则按姓名字符的字母序排序，如果姓名的字母序也相同则按照学生的年龄排序，并输出N个学生排序后的信息。</p>
<h3 id="输入：-1"><a href="#输入：-1" class="headerlink" title="输入："></a>输入：</h3><p>测试数据有多组，每组输入第一行有一个整数N（N&lt;=1000），接下来的N行包括N个学生的数据。</p>
<p>每个学生的数据包括姓名（长度不超过100的字符串）、年龄（整形数）、成绩（小于等于100的正数）。</p>
<h3 id="输出：-1"><a href="#输出：-1" class="headerlink" title="输出："></a>输出：</h3><p>将学生信息按成绩进行排序，成绩相同的则按姓名的字母序进行排序。</p>
<p>然后输出学生信息，按照如下格式：</p>
<p>姓名 年龄 成绩</p>
<h3 id="样例输入：-1"><a href="#样例输入：-1" class="headerlink" title="样例输入："></a>样例输入：</h3><p>3<br>abc 20 99<br>bcd 19 97<br>bed 20 97</p>
<h3 id="样例输出：-1"><a href="#样例输出：-1" class="headerlink" title="样例输出："></a>样例输出：</h3><p>bcd 19 97<br>bed 20 97<br>abc 20 99</p>
<h3 id="提示："><a href="#提示：" class="headerlink" title="提示："></a>提示：</h3><p>学生姓名的字母序区分字母的大小写，如A要比a的字母序靠前(因为A的ASC码比a的ASC码要小)。</p>
<h3 id="代码：-1"><a href="#代码：-1" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="keyword">struct</span> student&#123;</div><div class="line">    <span class="built_in">string</span> name;</div><div class="line">    <span class="keyword">int</span> age;</div><div class="line">    <span class="keyword">int</span> score;</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(student s1,student s2)</span></span>&#123;</div><div class="line">    <span class="keyword">if</span>(s1.score!=s2.score)</div><div class="line">        <span class="keyword">return</span> s1.score&lt;s2.score;</div><div class="line">    <span class="keyword">if</span>(s1.name!=s2.name)</div><div class="line">        <span class="keyword">return</span> s1.name&lt;s2.name;</div><div class="line">    <span class="keyword">return</span> s1.age&lt;s2.age;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">    <span class="keyword">int</span> n,i;</div><div class="line">    student s[<span class="number">1000</span>];</div><div class="line"></div><div class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;n)&#123;</div><div class="line">        <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)</div><div class="line">            <span class="built_in">cin</span>&gt;&gt;s[i].name&gt;&gt;s[i].age&gt;&gt;s[i].score;</div><div class="line">        stable_sort(s,s+n,cmp);</div><div class="line">        <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)</div><div class="line">            <span class="built_in">cout</span>&lt;&lt;s[i].name&lt;&lt;<span class="string">" "</span>&lt;&lt;s[i].age&lt;&lt;<span class="string">" "</span>&lt;&lt;s[i].score&lt;&lt;<span class="built_in">endl</span>;</div><div class="line"></div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"><span class="comment">/**************************************************************</span></div><div class="line">    Problem: 1061</div><div class="line">    User: ttinch</div><div class="line">    Language: C++</div><div class="line">    Result: Accepted</div><div class="line">    Time:620 ms</div><div class="line">    Memory:1528 kb</div><div class="line">****************************************************************/</div></pre></td></tr></table></figure>
<h3 id="c-结构体运算符重载"><a href="#c-结构体运算符重载" class="headerlink" title="c++结构体运算符重载"></a>c++结构体运算符重载</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">struct</span> student&#123;</div><div class="line">    <span class="built_in">string</span> name;</div><div class="line">    <span class="keyword">int</span> age;</div><div class="line">    <span class="keyword">int</span> score;</div><div class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (<span class="keyword">const</span> student s) <span class="keyword">const</span>&#123;</div><div class="line">        <span class="keyword">if</span>(score!=s.score)</div><div class="line">            <span class="keyword">return</span> score&lt;s.score;</div><div class="line">        <span class="keyword">if</span>(name!=s.name)</div><div class="line">            <span class="keyword">return</span> name&lt;s.name;</div><div class="line">        <span class="keyword">return</span> age&lt;s.age;</div><div class="line">    &#125;</div><div class="line">&#125;;</div><div class="line"></div><div class="line">stable_sort(s,s+n);</div></pre></td></tr></table></figure>
<h2 id="1185-特殊排序"><a href="#1185-特殊排序" class="headerlink" title="1185:特殊排序"></a><strong>1185:特殊排序</strong></h2><h3 id="题目描述：-2"><a href="#题目描述：-2" class="headerlink" title="题目描述："></a>题目描述：</h3><p>输入一系列整数，将其中最大的数挑出，并将剩下的数进行排序。</p>
<h3 id="输入：-2"><a href="#输入：-2" class="headerlink" title="输入："></a>输入：</h3><p>输入第一行包括1个整数N，1&lt;=N&lt;=1000，代表输入数据的个数。</p>
<p>接下来的一行有N个整数。</p>
<h3 id="输出：-2"><a href="#输出：-2" class="headerlink" title="输出："></a>输出：</h3><p>可能有多组测试数据，对于每组数据，</p>
<p>第一行输出一个整数，代表N个整数中的最大值，并将此值从数组中去除，将剩下的数进行排序。</p>
<p>第二行将排序的结果输出。</p>
<h3 id="样例输入：-2"><a href="#样例输入：-2" class="headerlink" title="样例输入："></a>样例输入：</h3><p>4<br>1 3 4 2</p>
<h3 id="样例输出：-2"><a href="#样例输出：-2" class="headerlink" title="样例输出："></a>样例输出：</h3><p>4<br>1 2 3</p>
<h3 id="提示：-1"><a href="#提示：-1" class="headerlink" title="提示："></a>提示：</h3><p>如果数组中只有一个数，当第一行将其输出后，第二行请输出”-1”。</p>
<h3 id="代码：-2"><a href="#代码：-2" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">    <span class="keyword">int</span> n;</div><div class="line">    <span class="keyword">int</span> a[<span class="number">1000</span>];</div><div class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;n)&#123;</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</div><div class="line">            <span class="built_in">cin</span>&gt;&gt;a[i];</div><div class="line">        <span class="keyword">if</span>(n==<span class="number">1</span>)&#123;</div><div class="line">            <span class="built_in">cout</span>&lt;&lt;a[<span class="number">0</span>]&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="number">-1</span>&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">else</span>&#123;</div><div class="line">            sort(a,a+n);</div><div class="line">            <span class="built_in">cout</span>&lt;&lt;a[n<span class="number">-1</span>]&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n<span class="number">-2</span>;i++)</div><div class="line">                <span class="built_in">cout</span>&lt;&lt;a[i]&lt;&lt;<span class="string">" "</span>;</div><div class="line">            <span class="built_in">cout</span>&lt;&lt;a[n<span class="number">-2</span>]&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"><span class="comment">/**************************************************************</span></div><div class="line">    Problem: 1185</div><div class="line">    User: ttinch</div><div class="line">    Language: C++</div><div class="line">    Result: Accepted</div><div class="line">    Time:50 ms</div><div class="line">    Memory:1520 kb</div><div class="line">****************************************************************/</div></pre></td></tr></table></figure>
<h2 id="1023-EXCEL排序"><a href="#1023-EXCEL排序" class="headerlink" title="1023:EXCEL排序"></a><strong>1023:EXCEL排序</strong></h2><p>题目描述：</p>
<p>Excel可以对一组纪录按任意指定列排序。现请你编写程序实现类似功能。</p>
<p>对每个测试用例，首先输出1行“Case i:”，其中 i 是测试用例的编号（从1开始）。随后在 N 行中输出按要求排序后的结果，即：当 C=1 时，按学号递增排序；当 C=2时，按姓名的非递减字典序排序；当 C=3<br>时，按成绩的非递减排序。当若干学生具有相同姓名或者相同成绩时，则按他们的学号递增排序。</p>
<p>输入：</p>
<p>测试输入包含若干测试用例。每个测试用例的第1行包含两个整数 N (N&lt;=100000) 和 C，其中 N 是纪录的条数，C 是指定排序的列号。以下有N行，每行包含一条学生纪录。每条学生纪录由学号（6位数字，同组测试中没有重复的学号）、姓名（不超过8位且不包含空格的字符串）、成绩（闭区间[0, 100]内的整数）组成，每个项目间用1个空格隔开。当读到 N=0 时，全部输入结束，相应的结果不要输出。</p>
<p>输出：</p>
<p>对每个测试用例，首先输出1行“Case i:”，其中 i 是测试用例的编号（从1开始）。随后在 N 行中输出按要求排序后的结果，即：当 C=1 时，按学号递增排序；当 C=2时，按姓名的非递减字典序排序；当 C=3<br>时，按成绩的非递减排序。当若干学生具有相同姓名或者相同成绩时，则按他们的学号递增排序。</p>
<p>样例输入：</p>
<p>3 1<br>000007 James 85<br>000010 Amy 90<br>000001 Zoe 60<br>4 2<br>000007 James 85<br>000010 Amy 90<br>000001 Zoe 60<br>000002 James 98<br>4 3<br>000007 James 85<br>000010 Amy 90<br>000001 Zoe 60<br>000002 James 90<br>0 0</p>
<p>样例输出：</p>
<p>Case 1:<br>000001 Zoe 60<br>000007 James 85<br>000010 Amy 90<br>Case 2:<br>000010 Amy 90<br>000002 James 98<br>000007 James 85<br>000001 Zoe 60<br>Case 3:<br>000001 Zoe 60<br>000007 James 85<br>000002 James 90<br>000010 Amy 90</p>
<h3 id="代码：-3"><a href="#代码：-3" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="keyword">struct</span> student&#123;</div><div class="line">    <span class="built_in">string</span> number;</div><div class="line">    <span class="built_in">string</span> name;</div><div class="line">    <span class="keyword">int</span> score;</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp1</span><span class="params">(student s1,student s2)</span></span>&#123;</div><div class="line">    <span class="keyword">return</span> s1.number&lt;s2.number;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp2</span><span class="params">(student s1,student s2)</span></span>&#123;</div><div class="line">    <span class="keyword">if</span>(s1.name!=s2.name)</div><div class="line">        <span class="keyword">return</span> s1.name&lt;s2.name;</div><div class="line">    <span class="keyword">return</span> s1.number&lt;s2.number;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp3</span><span class="params">(student s1,student s2)</span></span>&#123;</div><div class="line">    <span class="keyword">if</span>(s1.score!=s2.score)</div><div class="line">        <span class="keyword">return</span> s1.score&lt;s2.score;</div><div class="line">    <span class="keyword">return</span> s1.number&lt;s2.number;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">    <span class="keyword">int</span> n,c;</div><div class="line">    <span class="keyword">int</span> m=<span class="number">0</span>;</div><div class="line">    student s[<span class="number">100000</span>];</div><div class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;n&gt;&gt;c)&#123;</div><div class="line">        <span class="keyword">if</span>(n==<span class="number">0</span>)</div><div class="line">            <span class="keyword">break</span>;</div><div class="line">        m++;</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</div><div class="line">            <span class="built_in">cin</span>&gt;&gt;s[i].number&gt;&gt;s[i].name&gt;&gt;s[i].score;</div><div class="line">        <span class="keyword">if</span>(c==<span class="number">1</span>)</div><div class="line">            stable_sort(s,s+n,cmp1);</div><div class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(c==<span class="number">2</span>)</div><div class="line">            stable_sort(s,s+n,cmp2);</div><div class="line">        <span class="keyword">else</span></div><div class="line">            stable_sort(s,s+n,cmp3);</div><div class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"Case "</span>&lt;&lt;m&lt;&lt;<span class="string">":"</span>&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</div><div class="line">            <span class="built_in">cout</span>&lt;&lt;s[i].number&lt;&lt;<span class="string">" "</span>&lt;&lt;s[i].name&lt;&lt;<span class="string">" "</span>&lt;&lt;s[i].score&lt;&lt;<span class="built_in">endl</span>;</div><div class="line"></div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"><span class="comment">/**************************************************************</span></div><div class="line">    Problem: 1023</div><div class="line">    User: ttinch</div><div class="line">    Language: C++</div><div class="line">    Result: Accepted</div><div class="line">    Time:780 ms</div><div class="line">    Memory:5868 kb</div><div class="line">****************************************************************/</div></pre></td></tr></table></figure>
<h2 id="1054-字符串内排序"><a href="#1054-字符串内排序" class="headerlink" title="1054:字符串内排序"></a><strong>1054:字符串内排序</strong></h2><h3 id="题目描述：-3"><a href="#题目描述：-3" class="headerlink" title="题目描述："></a>题目描述：</h3><p>输入一个字符串，长度小于等于200，然后将输出按字符顺序升序排序后的字符串。</p>
<h3 id="输入：-3"><a href="#输入：-3" class="headerlink" title="输入："></a>输入：</h3><p>测试数据有多组，输入字符串。</p>
<h3 id="输出：-3"><a href="#输出：-3" class="headerlink" title="输出："></a>输出：</h3><p>对于每组输入,输出处理后的结果。</p>
<h3 id="样例输入：-3"><a href="#样例输入：-3" class="headerlink" title="样例输入："></a>样例输入：</h3><p>bacd</p>
<h3 id="样例输出：-3"><a href="#样例输出：-3" class="headerlink" title="样例输出："></a>样例输出：</h3><p>abcd</p>
<h3 id="代码：-4"><a href="#代码：-4" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">    <span class="built_in">string</span> s;</div><div class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;s)&#123;</div><div class="line">        sort(s.begin(),s.end());</div><div class="line">        <span class="built_in">cout</span>&lt;&lt;s&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"><span class="comment">/**************************************************************</span></div><div class="line">    Problem: 1054</div><div class="line">    User: ttinch</div><div class="line">    Language: C++</div><div class="line">    Result: Accepted</div><div class="line">    Time:780 ms</div><div class="line">    Memory:5868 kb</div><div class="line">****************************************************************/</div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> 研究生机试备战之旅 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 字符串与数字的转换 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[C++容器总结]]></title>
      <url>http://yoursite.com/2017/05/05/c++_container/</url>
      <content type="html"><![CDATA[<a id="more"></a>
]]></content>
      
        <categories>
            
            <category> 研究生机试备战之旅 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> c++ </tag>
            
            <tag> 容器 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[排序算法总结]]></title>
      <url>http://yoursite.com/2017/05/04/sort/</url>
      <content type="html"><![CDATA[<h2 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序　　"></a>冒泡排序　　</h2><a id="more"></a>
<h2 id="选择排序"><a href="#选择排序" class="headerlink" title="选择排序"></a>选择排序</h2><h2 id="插入排序"><a href="#插入排序" class="headerlink" title="插入排序"></a>插入排序</h2><p>　</p>
<h2 id="归并排序"><a href="#归并排序" class="headerlink" title="归并排序"></a>归并排序</h2><h2 id="堆排序"><a href="#堆排序" class="headerlink" title="堆排序"></a>堆排序</h2><h2 id="快速排序"><a href="#快速排序" class="headerlink" title="快速排序"></a>快速排序</h2>]]></content>
      
        <categories>
            
            <category> 研究生机试备战之旅 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> c++ </tag>
            
            <tag> 排序 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Jobdu 1036-1044（2007-2008年上海交通大学计算机研究生机试真题）]]></title>
      <url>http://yoursite.com/2017/04/13/jobdu1036-1044/</url>
      <content type="html"><![CDATA[<p>注：<strong><a href="http://ac.jobdu.com/problemset.php" target="_blank" rel="external">以下题目来源于九度</a></strong></p>
<h2 id="1036-Old-Bill"><a href="#1036-Old-Bill" class="headerlink" title="1036:Old Bill"></a><strong>1036:Old Bill</strong></h2><h3 id="题目描述："><a href="#题目描述：" class="headerlink" title="题目描述："></a>题目描述：</h3><p>Among grandfather’s papers a bill was found.</p>
<p>72 turkeys $<em>679</em></p>
<p>The first and the last digits of the number that obviously represented the total price of those turkeys are replaced here by blanks (denoted _), for they are faded and are illegible. What are the two faded digits and what was the price of one turkey?</p>
<p>We want to write a program that solves a general version of the above problem.</p>
<p>N turkeys $<em>XYZ</em><br><a id="more"></a><br>The total number of turkeys, N, is between 1 and 99, including both. The total price originally consisted of five digits, but we can see only the three digits in the middle. We assume that the first digit is nonzero, that the price of one turkeys is an integer number of dollars, and that all the</p>
<p>turkeys cost the same price.</p>
<p>Given N, X, Y, and Z, write a program that guesses the two faded digits and the original price. In case that there is more than one candidate for the original price, the output should be the most expensive one. That is, the program is to report the two faded digits and the maximum price per turkey for the turkeys.</p>
<h3 id="输入："><a href="#输入：" class="headerlink" title="输入："></a>输入：</h3><p>The first line of the input file contains an integer N (0&lt;N&lt;100), which represents the number of turkeys. In the following line, there are the three decimal digits X, Y, and Z., separated by a space, of the original price $<em>XYZ</em>.</p>
<h3 id="输出："><a href="#输出：" class="headerlink" title="输出："></a>输出：</h3><p>For each case, output the two faded digits and the maximum price per turkey for the turkeys.</p>
<h3 id="样例输入："><a href="#样例输入：" class="headerlink" title="样例输入："></a>样例输入：</h3><p>72<br>6 7 9<br>5<br>2 3 7<br>78<br>0 0 5  </p>
<h3 id="样例输出："><a href="#样例输出：" class="headerlink" title="样例输出："></a>样例输出：</h3><p>3 2 511<br>9 5 18475<br>0  </p>
<h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">    <span class="keyword">int</span> n, x, y, z;</div><div class="line">    <span class="keyword">int</span> first, last;</div><div class="line">    <span class="keyword">int</span> price, total;</div><div class="line">    <span class="keyword">int</span> i, j;</div><div class="line">    <span class="keyword">while</span> (<span class="built_in">cin</span> &gt;&gt; n &gt;&gt; x &gt;&gt; y &gt;&gt; z)&#123;</div><div class="line">        <span class="keyword">for</span> (i = <span class="number">9</span>; i &gt; <span class="number">0</span>; i--)</div><div class="line">            <span class="keyword">for</span> (j = <span class="number">9</span>; j &gt;= <span class="number">0</span>; j--)&#123;</div><div class="line">                total = i*<span class="number">10000</span>+x*<span class="number">1000</span>+y*<span class="number">100</span>+z*<span class="number">10</span>+j;</div><div class="line">                <span class="keyword">if</span> (total%n == <span class="number">0</span>)&#123;</div><div class="line">                    price = total/n;</div><div class="line">                    <span class="keyword">goto</span> breakLoop;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        breakLoop: <span class="keyword">if</span>(i == <span class="number">0</span>)&#123;</div><div class="line">            <span class="built_in">cout</span> &lt;&lt; i &lt;&lt;<span class="built_in">endl</span>;</div><div class="line">            <span class="keyword">continue</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="built_in">cout</span> &lt;&lt; i &lt;&lt; <span class="string">" "</span> &lt;&lt; j &lt;&lt; <span class="string">" "</span> &lt;&lt; price &lt;&lt;<span class="built_in">endl</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="1037-Powerful-Calculator"><a href="#1037-Powerful-Calculator" class="headerlink" title="1037:Powerful Calculator"></a><strong>1037:Powerful Calculator</strong></h2><h3 id="题目描述：-1"><a href="#题目描述：-1" class="headerlink" title="题目描述："></a>题目描述：</h3><p>Today, facing the rapid development of business, SJTU recognizes that more powerful calculator should be studied, developed and appeared in future market shortly. SJTU now invites you attending such amazing research and development work.</p>
<p>In most business applications, the top three useful calculation operators are Addition (+), Subtraction (-) and Multiplication (×) between two given integers. Normally, you may think it is just a piece of cake. However, since some integers for calculation in business application may be very big, such as the GDP of the whole world, the calculator becomes harder to develop.</p>
<p>For example, if we have two integers 20 000 000 000 000 000 and 4 000 000 000 000 000, the exact results of addition, subtraction and multiplication are:</p>
<p>20000000000000000 + 4000000000000000 = 24 000 000 000 000 000<br>20000000000000000 - 4000000000000000 = 16 000 000 000 000 000<br>20000000000000000 × 4000000000000000 = 80 000 000 000 000 000 000 000 000 000 000</p>
<p>Note: SJTU prefers the exact format of the results rather than the float format or scientific remark format. For instance, we need “24000000000000000” rather than 2.4×10^16.</p>
<p>As a programmer in SJTU, your current task is to develop a program to obtain the exact results of the addition (a + b), subtraction (a - b) and multiplication (a × b) between two given integers a and b.</p>
<h3 id="输入：-1"><a href="#输入：-1" class="headerlink" title="输入："></a>输入：</h3><p>Each case consists of two separate lines where the first line gives the integer a and the second gives b (|a| &lt;10^400 and |b| &lt; 10^400).</p>
<h3 id="输出：-1"><a href="#输出：-1" class="headerlink" title="输出："></a>输出：</h3><p>For each case, output three separate lines showing the exact results of addition (a + b), subtraction (a - b) and multiplication (a × b) of that case, one result per lines.</p>
<h3 id="样例输入：-1"><a href="#样例输入：-1" class="headerlink" title="样例输入："></a>样例输入：</h3><p>20000000000000000<br>4000000000000000</p>
<h3 id="样例输出：-1"><a href="#样例输出：-1" class="headerlink" title="样例输出："></a>样例输出：</h3><p>24000000000000000<br>16000000000000000<br>80000000000000000000000000000000</p>
<h3 id="代码：-1"><a href="#代码：-1" class="headerlink" title="代码："></a>代码：</h3><p>java 大数处理很方便，内置函数</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> java.util.Scanner;  </div><div class="line"><span class="keyword">import</span> java.math.BigInteger;  </div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span></span>&#123;    </div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;  </div><div class="line">        Scanner in=<span class="keyword">new</span> Scanner(System.in);  </div><div class="line">        <span class="keyword">while</span>(in.hasNext())&#123;  </div><div class="line">            BigInteger a=in.nextBigInteger();  </div><div class="line">            BigInteger b=in.nextBigInteger();  </div><div class="line">            System.out.println(a.add(b));  </div><div class="line">            System.out.println(a.subtract(b));  </div><div class="line">            System.out.println(a.multiply(b));  </div><div class="line">        &#125;  </div><div class="line">        in.close();  </div><div class="line">    &#125;  </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>c++处理大数运算——加法、减法、乘法</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sstream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="comment">// 同号加法，输入不计入符号，同为正</span></div><div class="line"><span class="function"><span class="built_in">string</span> <span class="title">add</span><span class="params">(<span class="built_in">string</span> str1,<span class="built_in">string</span> str2)</span></span>&#123;</div><div class="line">    <span class="keyword">int</span> len1, len2;</div><div class="line">    <span class="built_in">string</span> str3;</div><div class="line">    <span class="keyword">int</span> carry=<span class="number">0</span>, n1, n2;</div><div class="line">    <span class="keyword">if</span>(str1.length()&lt;str2.length())&#123;</div><div class="line">        str3 = str1;</div><div class="line">        str1 = str2;</div><div class="line">        str2 = str3;</div><div class="line">    &#125;</div><div class="line">    len1 = str1.length();</div><div class="line">    len2 = str2.length();</div><div class="line">    str3 = <span class="string">""</span>;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len1-len2;i++)&#123;</div><div class="line">        str3 += <span class="string">'0'</span>;</div><div class="line">    &#125;</div><div class="line">    str2 = str3+str2;</div><div class="line">    str3 = <span class="string">""</span>;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=len1<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)&#123;</div><div class="line">        n1 = str1[i]-<span class="string">'0'</span>;</div><div class="line">        n2 = str2[i]-<span class="string">'0'</span>;</div><div class="line">        str3 = <span class="keyword">char</span>((n1+n2+carry)%<span class="number">10</span>+<span class="keyword">int</span>(<span class="string">'0'</span>))+str3;</div><div class="line">        carry = (n1+n2+carry)/<span class="number">10</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span>(carry&gt;<span class="number">0</span>)</div><div class="line">        str3 = <span class="keyword">char</span>(carry+<span class="keyword">int</span>(<span class="string">'0'</span>))+str3;</div><div class="line">    <span class="keyword">return</span> str3;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 减法，大数减小数，输入不计符号，均为正数</span></div><div class="line"><span class="function"><span class="built_in">string</span> <span class="title">subtract</span><span class="params">(<span class="built_in">string</span> str1,<span class="built_in">string</span> str2)</span></span>&#123;</div><div class="line">    <span class="keyword">int</span> len1, len2;</div><div class="line">    <span class="built_in">string</span> str3;</div><div class="line">    <span class="keyword">int</span> carry=<span class="number">0</span>, n1, n2, n;</div><div class="line">    len1 = str1.length();</div><div class="line">    len2 = str2.length();</div><div class="line">    str3 = <span class="string">""</span>;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len1-len2;i++)&#123;</div><div class="line">        str3 += <span class="string">'0'</span>;</div><div class="line">    &#125;</div><div class="line">    str2 = str3+str2;</div><div class="line">    str3 = <span class="string">""</span>;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=len1<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)&#123;</div><div class="line">        n1 = str1[i]-<span class="string">'0'</span>;</div><div class="line">        n2 = str2[i]-<span class="string">'0'</span>;</div><div class="line">        <span class="keyword">if</span>(n1-n2-carry&lt;<span class="number">0</span>)&#123;</div><div class="line">            n = <span class="number">10</span>+n1-n2-carry;</div><div class="line">            carry = <span class="number">1</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">else</span>&#123;</div><div class="line">            n = n1-n2-carry;</div><div class="line">            carry = <span class="number">0</span>;</div><div class="line">        &#125;</div><div class="line">        str3 = <span class="keyword">char</span>(n+<span class="keyword">int</span>(<span class="string">'0'</span>))+str3;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">while</span>(str3[<span class="number">0</span>]==<span class="string">'0'</span>)</div><div class="line">        str3.erase(<span class="number">0</span>,<span class="number">1</span>);</div><div class="line">    <span class="keyword">if</span>(str3==<span class="string">""</span>)</div><div class="line">        str3 = <span class="string">"0"</span>;</div><div class="line">    <span class="keyword">return</span> str3;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 加法的四种情况</span></div><div class="line"><span class="function"><span class="built_in">string</span> <span class="title">add_all</span><span class="params">(<span class="built_in">string</span> str1,<span class="built_in">string</span> str2)</span></span>&#123;</div><div class="line">    <span class="keyword">if</span>((str1[<span class="number">0</span>]==<span class="string">'-'</span>&amp;&amp;str2[<span class="number">0</span>]==<span class="string">'-'</span>))&#123;</div><div class="line">        str1.erase(<span class="number">0</span>,<span class="number">1</span>);</div><div class="line">        str2.erase(<span class="number">0</span>,<span class="number">1</span>);</div><div class="line">        <span class="keyword">return</span> <span class="string">"-"</span>+add(str1,str2);</div><div class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>((str1[<span class="number">0</span>]!=<span class="string">'-'</span>&amp;&amp;str2[<span class="number">0</span>]!=<span class="string">'-'</span>))</div><div class="line">        <span class="keyword">return</span> add(str1,str2);</div><div class="line">    <span class="keyword">else</span> <span class="keyword">if</span>((str1[<span class="number">0</span>]==<span class="string">'-'</span>&amp;&amp;str2[<span class="number">0</span>]!=<span class="string">'-'</span>))&#123;</div><div class="line">        str1.erase(<span class="number">0</span>,<span class="number">1</span>);</div><div class="line">        <span class="keyword">if</span>(str1.length()&gt;str2.length())</div><div class="line">            <span class="keyword">return</span> <span class="string">"-"</span>+subtract(str1,str2);</div><div class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(str1.length()&lt;str2.length())</div><div class="line">            <span class="keyword">return</span> subtract(str2,str1);</div><div class="line">        <span class="keyword">else</span>&#123;</div><div class="line">            <span class="keyword">if</span>(str2&gt;=str1)</div><div class="line">                <span class="keyword">return</span> subtract(str2,str1);</div><div class="line">            <span class="keyword">else</span></div><div class="line">                <span class="keyword">return</span> <span class="string">"-"</span>+subtract(str1,str2);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span> <span class="keyword">if</span>((str1[<span class="number">0</span>]!=<span class="string">'-'</span>&amp;&amp;str2[<span class="number">0</span>]==<span class="string">'-'</span>))&#123;</div><div class="line">        str2.erase(<span class="number">0</span>,<span class="number">1</span>);</div><div class="line">        <span class="keyword">if</span>(str1.length()&gt;str2.length())</div><div class="line">            <span class="keyword">return</span> subtract(str1,str2);</div><div class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(str1.length()&lt;str2.length())</div><div class="line">            <span class="keyword">return</span> <span class="string">"-"</span>+subtract(str2,str1);</div><div class="line">        <span class="keyword">else</span>&#123;</div><div class="line">            <span class="keyword">if</span>(str1&gt;=str2)</div><div class="line">                <span class="keyword">return</span> subtract(str1,str2);</div><div class="line">            <span class="keyword">else</span></div><div class="line">                <span class="keyword">return</span> <span class="string">"-"</span>+subtract(str2,str1);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"><span class="comment">// 减法的多种情况</span></div><div class="line"><span class="function"><span class="built_in">string</span> <span class="title">subtract_all</span><span class="params">(<span class="built_in">string</span> str1,<span class="built_in">string</span> str2)</span></span>&#123;</div><div class="line">    <span class="keyword">if</span>(str2[<span class="number">0</span>]==<span class="string">'-'</span>)</div><div class="line">        str2.erase(<span class="number">0</span>,<span class="number">1</span>);</div><div class="line">    <span class="keyword">else</span></div><div class="line">        str2 = <span class="string">"-"</span>+str2;</div><div class="line">    <span class="keyword">return</span> add_all(str1,str2);</div><div class="line">&#125;</div><div class="line"><span class="comment">// 一个数乘以一个个位数</span></div><div class="line"><span class="function"><span class="built_in">string</span> <span class="title">mutiply_simple</span><span class="params">(<span class="built_in">string</span> str1,<span class="keyword">char</span> str2)</span></span>&#123;</div><div class="line">    <span class="keyword">int</span> n1, n2 = str2-<span class="string">'0'</span>;</div><div class="line">    <span class="keyword">int</span> len1 = str1.length();</div><div class="line">    <span class="built_in">string</span> str3 = <span class="string">""</span>;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i&lt;n2;i++)</div><div class="line">        str3 = add(str3,str1);</div><div class="line">    <span class="keyword">return</span> str3;</div><div class="line">&#125;</div><div class="line"><span class="comment">// 乘法</span></div><div class="line"><span class="function"><span class="built_in">string</span> <span class="title">mutiply</span><span class="params">(<span class="built_in">string</span> str1, <span class="built_in">string</span> str2)</span></span>&#123;</div><div class="line">    <span class="keyword">int</span> len1, len2;</div><div class="line">    <span class="built_in">string</span> str3 = <span class="string">""</span>;</div><div class="line">    <span class="built_in">string</span> symbol = <span class="string">""</span>;</div><div class="line">    <span class="keyword">if</span>((str1[<span class="number">0</span>]==<span class="string">'-'</span>&amp;&amp;str2[<span class="number">0</span>]==<span class="string">'-'</span>))&#123;</div><div class="line">        str1.erase(<span class="number">0</span>,<span class="number">1</span>);</div><div class="line">        str2.erase(<span class="number">0</span>,<span class="number">1</span>);</div><div class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>((str1[<span class="number">0</span>]==<span class="string">'-'</span>&amp;&amp;str2[<span class="number">0</span>]!=<span class="string">'-'</span>))&#123;</div><div class="line">        str1.erase(<span class="number">0</span>,<span class="number">1</span>);</div><div class="line">        symbol = <span class="string">"-"</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span> <span class="keyword">if</span>((str1[<span class="number">0</span>]!=<span class="string">'-'</span>&amp;&amp;str2[<span class="number">0</span>]==<span class="string">'-'</span>))&#123;</div><div class="line">        str2.erase(<span class="number">0</span>,<span class="number">1</span>);</div><div class="line">        symbol = <span class="string">"-"</span>;</div><div class="line">    &#125;</div><div class="line">    len1 = str1.length();</div><div class="line">    len2 = str2.length();</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=len2<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)&#123;</div><div class="line">        str3 = add(str3,mutiply_simple(str1,str2[i])+<span class="built_in">string</span>(len2<span class="number">-1</span>-i,<span class="string">'0'</span>));</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">while</span>(str3[<span class="number">0</span>]==<span class="string">'0'</span>)</div><div class="line">        str3.erase(<span class="number">0</span>,<span class="number">1</span>);</div><div class="line">    <span class="keyword">if</span>(str3==<span class="string">""</span>)</div><div class="line">        str3 = <span class="string">"0"</span>;</div><div class="line">    <span class="keyword">else</span></div><div class="line">        str3 = symbol+str3;</div><div class="line">    <span class="keyword">return</span> str3;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">    <span class="built_in">string</span> str1, str2;</div><div class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span> &gt;&gt; str1 &gt;&gt; str2)&#123;</div><div class="line">        <span class="built_in">cout</span> &lt;&lt; add_all(str1,str2) &lt;&lt; <span class="built_in">endl</span>;</div><div class="line">        <span class="built_in">cout</span> &lt;&lt; subtract_all(str1,str2) &lt;&lt; <span class="built_in">endl</span>;</div><div class="line">        <span class="built_in">cout</span> &lt;&lt; mutiply(str1,str2) &lt;&lt; <span class="built_in">endl</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="1038-Sum-of-Factorials"><a href="#1038-Sum-of-Factorials" class="headerlink" title="1038:Sum of Factorials"></a><strong>1038:Sum of Factorials</strong></h2><h3 id="题目描述：-2"><a href="#题目描述：-2" class="headerlink" title="题目描述："></a>题目描述：</h3><p>John von Neumann, b. Dec. 28, 1903, d. Feb. 8, 1957, was a Hungarian-American mathematician who made important contributions to the foundations of mathematics, logic, quantum physics, meteorology, science, computers, and game theory. He was noted for a phenomenal memory and the speed with which he absorbed ideas and solved problems. In 1925 he received a B.S. diploma in chemical engineering from Zurich Institute and in 1926 a Ph.D. in mathematics from the University of Budapest, His Ph.D. dissertation on set theory was an important contributions to the subject.</p>
<p>At the age of 20, von Neumann proposed a new definition of ordinal numbers that was universally adopted. While still in his twenties, he made many contributions in both pure and applied mathematics that established him as a mathematician of unusual depth. His Mathematical Foundation of Quantum Mechanics (1932) built a solid framework for the new scientific discipline.</p>
<p>During this time he also proved the mini-max theorem of GAME THEORY. He gradually expanded his work in game theory, and with coauthor Oskar Morgenstern he wrote Theory of Games and Economic Behavior (1944).</p>
<p>There are some numbers which can be expressed by the sum of factorials. For example 9, 9 = 1! + 2! + 3! . Dr. von Neumann was very interested in such numbers. So, he gives you a number n, and wants you to tell whether or not the number can be expressed by the sum of some factorials.</p>
<p>Well, it is just a piece of case. For a given n, you will check if there are some xi, and let n equal to Σ<sub>1&lt;=i&lt;=t</sub>x<sub>i</sub>!. (t≥1, xi≥0, xi = xj &lt;==&gt; i = j).</p>
<p>If the answer is yes, say “YES”; otherwise, print out “NO”.</p>
<h3 id="输入：-2"><a href="#输入：-2" class="headerlink" title="输入："></a>输入：</h3><p>You will get a non-negative integer n (n≤1,000,000) from input file.</p>
<h3 id="输出：-2"><a href="#输出：-2" class="headerlink" title="输出："></a>输出：</h3><p>For the n in the input file, you should print exactly one word (“YES” or “NO”) in a single line. No extra spaces are allowed.</p>
<h3 id="样例输入：-2"><a href="#样例输入：-2" class="headerlink" title="样例输入："></a>样例输入：</h3><p>9<br>2</p>
<h3 id="样例输出：-2"><a href="#样例输出：-2" class="headerlink" title="样例输出："></a>样例输出：</h3><p>YES<br>YES</p>
<h3 id="代码：-2"><a href="#代码：-2" class="headerlink" title="代码："></a>代码：</h3><p>9! = 362880<br>10! = 3628800<br>n≤1,000,000,最大考虑9<br>1！+2！+……+n!&lt;(n+1)!=(n+1)*n!</p>
<p>题目要求n为非负整数，不知n=0时应该是yes还是no，但最后结果是否考虑该项都可通过</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">factorial</span><span class="params">(<span class="keyword">int</span> n)</span></span>&#123;</div><div class="line">    <span class="keyword">if</span>(n==<span class="number">0</span>)</div><div class="line">        <span class="keyword">return</span> <span class="number">1</span>;</div><div class="line">    <span class="keyword">else</span></div><div class="line">        <span class="keyword">return</span> n*factorial(n<span class="number">-1</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">    <span class="keyword">int</span> n;</div><div class="line">    <span class="keyword">int</span> a[<span class="number">10</span>],i;</div><div class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)</div><div class="line">        a[i] = factorial(i);</div><div class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;n)&#123;</div><div class="line">        <span class="keyword">if</span>(n==<span class="number">0</span>)&#123;</div><div class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"NO"</span>&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">            <span class="keyword">continue</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">for</span>(i=<span class="number">9</span>;i&gt;=<span class="number">0</span>;i--)&#123;</div><div class="line">            <span class="keyword">if</span>(a[i]&lt;=n)</div><div class="line">                n = n-a[i];</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span>(n==<span class="number">0</span>)</div><div class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"YES"</span>&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">        <span class="keyword">else</span></div><div class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"NO"</span>&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="1039-Zero-complexity-Transposition"><a href="#1039-Zero-complexity-Transposition" class="headerlink" title="1039:Zero-complexity Transposition"></a><strong>1039:Zero-complexity Transposition</strong></h2><h3 id="题目描述：-3"><a href="#题目描述：-3" class="headerlink" title="题目描述："></a>题目描述：</h3><p>You are given a sequence of integer numbers. Zero-complexity transposition of the sequence is the reverse of this sequence. Your task is to write a program that prints zero-complexity transposition of the given sequence.</p>
<h3 id="输入：-3"><a href="#输入：-3" class="headerlink" title="输入："></a>输入：</h3><p>For each case, the first line of the input file contains one integer n-length of the sequence (0 ＜ n ≤ 10 000). The second line contains n integers numbers-a1, a2, …, an (-1 000 000 000 000 000 ≤ ai ≤ 1 000 000 000 000 000).</p>
<h3 id="输出：-3"><a href="#输出：-3" class="headerlink" title="输出："></a>输出：</h3><p>For each case, on the first line of the output file print the sequence in the reverse order.</p>
<h3 id="样例输入：-3"><a href="#样例输入：-3" class="headerlink" title="样例输入："></a>样例输入：</h3><p>5<br>-3 4 6 -8 9</p>
<h3 id="样例输出：-3"><a href="#样例输出：-3" class="headerlink" title="样例输出："></a>样例输出：</h3><p>9 -8 6 4 -3</p>
<h3 id="代码：-3"><a href="#代码：-3" class="headerlink" title="代码："></a>代码：</h3><p>注意输出格式，最后一个数输出后没有空格</p>
<p>注意数据范围</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stack&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">    <span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> n,temp;</div><div class="line">    <span class="built_in">stack</span>&lt;<span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span>&gt; s;</div><div class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;n)&#123;</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</div><div class="line">            <span class="built_in">cin</span>&gt;&gt;temp;</div><div class="line">            s.push(temp);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n<span class="number">-1</span>;i++)&#123;</div><div class="line">            <span class="built_in">cout</span>&lt;&lt;s.top()&lt;&lt;<span class="string">" "</span>;</div><div class="line">            s.pop();</div><div class="line">        &#125;</div><div class="line">        <span class="built_in">cout</span>&lt;&lt;s.top()&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">        s.pop();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="1040-Prime-Number"><a href="#1040-Prime-Number" class="headerlink" title="1040:Prime Number"></a><strong>1040:Prime Number</strong></h2><h3 id="题目描述：-4"><a href="#题目描述：-4" class="headerlink" title="题目描述："></a>题目描述：</h3><p>Output the k-th prime number.</p>
<h3 id="输入：-4"><a href="#输入：-4" class="headerlink" title="输入："></a>输入：</h3><p>k≤10000</p>
<h3 id="输出：-4"><a href="#输出：-4" class="headerlink" title="输出："></a>输出：</h3><p>The k-th prime number.</p>
<h3 id="样例输入：-4"><a href="#样例输入：-4" class="headerlink" title="样例输入："></a>样例输入：</h3><p>3<br>7</p>
<h3 id="样例输出：-4"><a href="#样例输出：-4" class="headerlink" title="样例输出："></a>样例输出：</h3><p>5<br>17</p>
<h3 id="代码：-4"><a href="#代码：-4" class="headerlink" title="代码："></a>代码：</h3><p>注意数组范围，int k[10000] 最大为k[9999]</p>
<p>或者申请的时候可以多申请一些空间</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stack&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="comment">// 判断是否时素数，是返回1，不是返回0</span></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">prime</span><span class="params">(<span class="keyword">int</span> n)</span></span>&#123;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=<span class="built_in">sqrt</span>(n);i++)&#123;</div><div class="line">        <span class="keyword">if</span>(n%i==<span class="number">0</span>)</div><div class="line">            <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="number">1</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">    <span class="keyword">long</span> <span class="keyword">int</span> k[<span class="number">10000</span>];</div><div class="line">    <span class="keyword">long</span> <span class="keyword">int</span> i=<span class="number">2</span>,n=<span class="number">0</span>;</div><div class="line">    <span class="keyword">int</span> m;</div><div class="line">    <span class="keyword">while</span>(n&lt;=<span class="number">9999</span>)&#123;</div><div class="line">        <span class="keyword">if</span>(prime(i)==<span class="number">1</span>)&#123;</div><div class="line">            k[n]=i;</div><div class="line">            n++;</div><div class="line">        &#125;</div><div class="line">        i++;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;m)</div><div class="line">        <span class="built_in">cout</span>&lt;&lt;k[m<span class="number">-1</span>]&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="1041-Simple-Sorting"><a href="#1041-Simple-Sorting" class="headerlink" title="1041:Simple Sorting"></a><strong>1041:Simple Sorting</strong></h2><h3 id="题目描述：-5"><a href="#题目描述：-5" class="headerlink" title="题目描述："></a>题目描述：</h3><p>You are given an unsorted array of integer numbers. Your task is to sort this array and kill possible duplicated elements occurring in it.</p>
<h3 id="输入：-5"><a href="#输入：-5" class="headerlink" title="输入："></a>输入：</h3><p>For each case, the first line of the input contains an integer number N representing the quantity of numbers in this array(1≤N≤1000). Next N lines contain N integer numbers(one number per each line) of the original array.</p>
<h3 id="输出：-5"><a href="#输出：-5" class="headerlink" title="输出："></a>输出：</h3><p>For each case ,outtput file should contain at most N numbers sorted in ascending order. Every number in the output file should occur only once.</p>
<h3 id="样例输入：-5"><a href="#样例输入：-5" class="headerlink" title="样例输入："></a>样例输入：</h3><p>6<br>8 8 7 3 7 7</p>
<h3 id="样例输出：-5"><a href="#样例输出：-5" class="headerlink" title="样例输出："></a>样例输出：</h3><p>3 7 8</p>
<h3 id="代码：-5"><a href="#代码：-5" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iterator&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">    <span class="keyword">int</span> n;</div><div class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;n)&#123;</div><div class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; a(n);</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</div><div class="line">            <span class="built_in">cin</span>&gt;&gt;a[i];</div><div class="line">        sort(a.begin(),a.end());</div><div class="line">        unique(a.begin(),a.end());</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</div><div class="line">            <span class="keyword">if</span>(i&lt;n<span class="number">-1</span>)&#123;</div><div class="line">                <span class="keyword">if</span>(a[i]&gt;=a[i+<span class="number">1</span>])&#123;</div><div class="line">                    <span class="built_in">cout</span>&lt;&lt;a[i]&lt;&lt;<span class="built_in">endl</span>;;</div><div class="line">                    <span class="keyword">break</span>;</div><div class="line">                &#125;<span class="keyword">else</span></div><div class="line">                    <span class="built_in">cout</span>&lt;&lt;a[i]&lt;&lt;<span class="string">" "</span>;</div><div class="line"></div><div class="line">            &#125;</div><div class="line">            <span class="keyword">else</span></div><div class="line">                <span class="built_in">cout</span>&lt;&lt;a[i]&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="1042-Coincidence"><a href="#1042-Coincidence" class="headerlink" title="1042:Coincidence"></a><strong>1042:Coincidence</strong></h2><h3 id="题目描述：-6"><a href="#题目描述：-6" class="headerlink" title="题目描述："></a>题目描述：</h3><p>Find a longest common subsequence of two strings.</p>
<h3 id="输入：-6"><a href="#输入：-6" class="headerlink" title="输入："></a>输入：</h3><p>First and second line of each input case contain two strings of lowercase character a…z. There are no spaces before, inside or after the strings. Lengths of strings do not exceed 100.</p>
<h3 id="输出：-6"><a href="#输出：-6" class="headerlink" title="输出："></a>输出：</h3><p>For each case, output k – the length of a longest common subsequence in one line.</p>
<h3 id="样例输入：-6"><a href="#样例输入：-6" class="headerlink" title="样例输入："></a>样例输入：</h3><p>abcd<br>cxbydz</p>
<h3 id="样例输出：-6"><a href="#样例输出：-6" class="headerlink" title="样例输出："></a>样例输出：</h3><p>2</p>
<h3 id="代码：-6"><a href="#代码：-6" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">    <span class="built_in">string</span> str1,str2,str3;</div><div class="line">    <span class="keyword">int</span> len1,len2,num,ans;</div><div class="line">    <span class="keyword">int</span> k[<span class="number">101</span>][<span class="number">101</span>]=&#123;<span class="number">0</span>&#125;;</div><div class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;str1&gt;&gt;str2)&#123;</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">101</span>;i++)&#123;</div><div class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;<span class="number">101</span>;j++)&#123;</div><div class="line">                k[i][j]=<span class="number">0</span>;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        len1 = str1.length();</div><div class="line">        len2 = str2.length();</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len1;i++)&#123;</div><div class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;len2;j++)&#123;</div><div class="line">                <span class="keyword">if</span>(str1[i]==str2[j])</div><div class="line">                    k[i][j]=<span class="number">1</span>;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        ans=<span class="number">0</span>;</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=len1<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)&#123;</div><div class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=len2<span class="number">-1</span>;j&gt;=<span class="number">0</span>;j--)&#123;</div><div class="line">                <span class="keyword">if</span>(k[i][j]==<span class="number">0</span>)</div><div class="line">                    <span class="keyword">continue</span>;</div><div class="line">                num=<span class="number">0</span>;</div><div class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> n=i+<span class="number">1</span>;n&lt;len1;n++)</div><div class="line">                    <span class="keyword">for</span>(<span class="keyword">int</span> m=j+<span class="number">1</span>;m&lt;len2;m++)</div><div class="line">                        <span class="keyword">if</span>(num&lt;k[n][m])</div><div class="line">                            num=k[n][m];</div><div class="line">                k[i][j]=num+<span class="number">1</span>;</div><div class="line">                <span class="keyword">if</span>(ans&lt;k[i][j])</div><div class="line">                    ans=k[i][j];</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="1043-Day-of-Week"><a href="#1043-Day-of-Week" class="headerlink" title="1043:Day of Week"></a><strong>1043:Day of Week</strong></h2><h3 id="题目描述：-7"><a href="#题目描述：-7" class="headerlink" title="题目描述："></a>题目描述：</h3><p>We now use the Gregorian style of dating in Russia. The leap years are years with number divisible by 4 but not divisible by 100, or divisible by 400.<br>For example, years 2004, 2180 and 2400 are leap. Years 2004, 2181 and 2300 are not leap.<br>Your task is to write a program which will compute the day of week corresponding to a given date in the nearest past or in the future using today’s agreement about dating.</p>
<h3 id="输入：-7"><a href="#输入：-7" class="headerlink" title="输入："></a>输入：</h3><p>There is one single line contains the day number d, month name M and year number y(1000≤y≤3000). The month name is the corresponding English name starting from the capital letter.</p>
<h3 id="输出：-7"><a href="#输出：-7" class="headerlink" title="输出："></a>输出：</h3><p>Output a single line with the English name of the day of week corresponding to the date, starting from the capital letter. All other letters must be in lower case.</p>
<h3 id="样例输入：-7"><a href="#样例输入：-7" class="headerlink" title="样例输入："></a>样例输入：</h3><p>9 October 2001<br>14 October 2001</p>
<h3 id="样例输出：-7"><a href="#样例输出：-7" class="headerlink" title="样例输出："></a>样例输出：</h3><p>Tuesday<br>Sunday</p>
<h3 id="提示："><a href="#提示：" class="headerlink" title="提示："></a>提示：</h3><p>Month and Week name in Input/Output:<br>January, February, March, April, May, June, July, August, September, October, November, December<br>Sunday, Monday, Tuesday, Wednesday, Thursday, Friday, Saturday</p>
<h3 id="代码：-7"><a href="#代码：-7" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="built_in">string</span> <span class="title">coutweek</span><span class="params">(<span class="keyword">int</span> w)</span></span>&#123;</div><div class="line">    <span class="built_in">string</span> str[<span class="number">7</span>]=&#123;<span class="string">"Monday"</span>, <span class="string">"Tuesday"</span>, <span class="string">"Wednesday"</span>, <span class="string">"Thursday"</span>, <span class="string">"Friday"</span>, <span class="string">"Saturday"</span>, <span class="string">"Sunday"</span>&#125;;</div><div class="line">    <span class="keyword">return</span> str[w<span class="number">-1</span>];</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">cinmouth</span><span class="params">(<span class="built_in">string</span> s)</span></span>&#123;</div><div class="line">    <span class="built_in">string</span> str[<span class="number">12</span>]=&#123;<span class="string">"January"</span>, <span class="string">"February"</span>, <span class="string">"March"</span>, <span class="string">"April"</span>, <span class="string">"May"</span>, <span class="string">"June"</span>,</div><div class="line">    <span class="string">"July"</span>, <span class="string">"August"</span>, <span class="string">"September"</span>, <span class="string">"October"</span>, <span class="string">"November"</span>, <span class="string">"December"</span>&#125;;</div><div class="line">    <span class="keyword">int</span> i;</div><div class="line">    <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=<span class="number">12</span>;i++)&#123;</div><div class="line">        <span class="keyword">if</span>(s.compare(str[i<span class="number">-1</span>])==<span class="number">0</span>)</div><div class="line">            <span class="keyword">break</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> i;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">    <span class="keyword">int</span> y=<span class="number">2017</span>,m=<span class="number">4</span>,d=<span class="number">27</span>,w=<span class="number">4</span>;</div><div class="line">    <span class="keyword">int</span> y1,m1,d1,w1;</div><div class="line">    <span class="keyword">int</span> mouth[<span class="number">12</span>]=&#123;<span class="number">31</span>,<span class="number">28</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>&#125;;</div><div class="line">    <span class="keyword">int</span> day,i;</div><div class="line">    <span class="built_in">string</span> str;</div><div class="line">    w=w-(<span class="number">31</span>+<span class="number">28</span>+<span class="number">31</span>+d<span class="number">-1</span>)%<span class="number">7</span>;</div><div class="line">    <span class="keyword">while</span>(w&lt;=<span class="number">0</span>)&#123;</div><div class="line">        w+=<span class="number">7</span>;</div><div class="line">    &#125;</div><div class="line">    m=<span class="number">1</span>;</div><div class="line">    d=<span class="number">1</span>;</div><div class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;d1&gt;&gt;str&gt;&gt;y1)&#123;</div><div class="line">        m1=cinmouth(str);</div><div class="line">        day=<span class="number">0</span>;</div><div class="line">        <span class="keyword">if</span>(y1&lt;y)&#123;</div><div class="line">            <span class="keyword">for</span>(i=y1;i&lt;y;i++)&#123;</div><div class="line">                <span class="keyword">if</span>(i%<span class="number">400</span>==<span class="number">0</span>||(i%<span class="number">4</span>==<span class="number">0</span>&amp;&amp;i%<span class="number">100</span>!=<span class="number">0</span>))</div><div class="line">                    day+=<span class="number">366</span>;</div><div class="line">                <span class="keyword">else</span></div><div class="line">                    day+=<span class="number">365</span>;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">if</span>(y1%<span class="number">400</span>==<span class="number">0</span>||(y1%<span class="number">4</span>==<span class="number">0</span>&amp;&amp;y1%<span class="number">100</span>!=<span class="number">0</span>))</div><div class="line">                mouth[<span class="number">1</span>]=<span class="number">29</span>;</div><div class="line">            <span class="keyword">else</span></div><div class="line">                mouth[<span class="number">1</span>]=<span class="number">28</span>;</div><div class="line">            <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;m1;i++)</div><div class="line">                day-=mouth[i<span class="number">-1</span>];</div><div class="line">            day-=d1<span class="number">-1</span>;</div><div class="line">            w1=w-day%<span class="number">7</span>;</div><div class="line">            <span class="keyword">while</span>(w1&lt;=<span class="number">0</span>)&#123;</div><div class="line">                w1+=<span class="number">7</span>;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">else</span>&#123;</div><div class="line">            <span class="keyword">for</span>(i=y;i&lt;y1;i++)&#123;</div><div class="line">                <span class="keyword">if</span>(i%<span class="number">400</span>==<span class="number">0</span>||(i%<span class="number">4</span>==<span class="number">0</span>&amp;&amp;i%<span class="number">100</span>!=<span class="number">0</span>))</div><div class="line">                    day+=<span class="number">366</span>;</div><div class="line">                <span class="keyword">else</span></div><div class="line">                    day+=<span class="number">365</span>;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">if</span>(y1%<span class="number">400</span>==<span class="number">0</span>||(y1%<span class="number">4</span>==<span class="number">0</span>&amp;&amp;y1%<span class="number">100</span>!=<span class="number">0</span>))</div><div class="line">                mouth[<span class="number">1</span>]=<span class="number">29</span>;</div><div class="line">            <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;m1;i++)</div><div class="line">                day+=mouth[i<span class="number">-1</span>];</div><div class="line">            day+=d1<span class="number">-1</span>;</div><div class="line">            w1=w+day%<span class="number">7</span>;</div><div class="line">            <span class="keyword">while</span>(w1&gt;<span class="number">7</span>)&#123;</div><div class="line">                w1-=<span class="number">7</span>;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="built_in">cout</span>&lt;&lt;coutweek(w1)&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="1044-Pre-Post"><a href="#1044-Pre-Post" class="headerlink" title="1044:Pre-Post"></a><strong>1044:Pre-Post</strong></h2><h3 id="题目描述：-8"><a href="#题目描述：-8" class="headerlink" title="题目描述："></a>题目描述：</h3><p>We are all familiar with pre-order, in-order and post-order traversals of binary trees. A common problem in data structure classes is to find the pre-order traversal of a binary tree when given the in-order and post-order traversals. Alternatively, you can find the post-order traversal when given the in-order and pre-order. However, in general you cannot determine the in-order traversal of a tree when given its pre-order and post-order traversals. Consider the four binary trees below:</p>
<p><img src="http://ac.jobdu.com/upload/201111/image/1044_Pre_Post.jpg" alt="picture"></p>
<p>All of these trees have the same pre-order and post-order traversals. This phenomenon is not restricted to binary trees, but holds for general m-ary trees as well.</p>
<h3 id="输入：-8"><a href="#输入：-8" class="headerlink" title="输入："></a>输入：</h3><p>Input will consist of multiple problem instances. Each instance will consist of a line of the form<br>m s1 s2</p>
<p>indicating that the trees are m-ary trees, s1 is the pre-order traversal and s2 is the post-order traversal.All traversal strings will consist of lowercase alphabetic characters. For all input instances, 1 &lt;= m &lt;= 20 and the length of s1 and s2 will be between 1 and 26 inclusive. If the length of s1 is k (which is the same as the length of s2, of course), the first k letters of the alphabet will be used in the strings. An input line of 0 will terminate the input.</p>
<h3 id="输出：-8"><a href="#输出：-8" class="headerlink" title="输出："></a>输出：</h3><p>For each problem instance, you should output one line containing the number of possible trees which would result in the pre-order and post-order traversals for the instance. All output values will be within the range of a 32-bit signed integer. For each problem instance, you are guaranteed that there is at least one tree with the given pre-order and post-order traversals.</p>
<h3 id="样例输入：-8"><a href="#样例输入：-8" class="headerlink" title="样例输入："></a>样例输入：</h3><p>2 abc cba<br>2 abc bca<br>10 abc bca<br>13 abejkcfghid jkebfghicda</p>
<h3 id="样例输出：-8"><a href="#样例输出：-8" class="headerlink" title="样例输出："></a>样例输出：</h3><p>4<br>1<br>45<br>207352860</p>
<h3 id="代码：-8"><a href="#代码：-8" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">combination</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</div><div class="line">    <span class="keyword">int</span> i,ans;</div><div class="line">    ans = a;</div><div class="line">    <span class="keyword">for</span>(i=<span class="number">2</span>;i&lt;=b;i++)&#123;</div><div class="line">        ans = ans*(a-i+<span class="number">1</span>)/i;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> ans;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">num_tra</span><span class="params">(<span class="keyword">int</span> k,<span class="built_in">string</span> str1,<span class="built_in">string</span> str2)</span></span>&#123;</div><div class="line">    <span class="keyword">int</span> poi,i=<span class="number">0</span>;</div><div class="line">    <span class="keyword">int</span> ans=<span class="number">1</span>;</div><div class="line">    <span class="built_in">string</span> str11,str22;</div><div class="line">    <span class="keyword">if</span>(str1.empty())</div><div class="line">        <span class="keyword">return</span> <span class="number">1</span>;</div><div class="line">    <span class="keyword">while</span>(<span class="number">1</span>)&#123;</div><div class="line">        <span class="keyword">if</span>(str1.empty())</div><div class="line">            <span class="keyword">break</span>;</div><div class="line">        poi=str2.find(str1[<span class="number">0</span>]);</div><div class="line">        str11=str1.substr(<span class="number">0</span>,poi+<span class="number">1</span>);</div><div class="line">        str11.erase(<span class="number">0</span>,<span class="number">1</span>);</div><div class="line">        str22=str2.substr(<span class="number">0</span>,poi);</div><div class="line">        ans=ans*num_tra(k,str11,str22);</div><div class="line">        str1.erase(<span class="number">0</span>,poi+<span class="number">1</span>);</div><div class="line">        str2.erase(<span class="number">0</span>,poi+<span class="number">1</span>);</div><div class="line">        i++;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">return</span> ans*combination(k,i);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">    <span class="keyword">int</span> k;</div><div class="line">    <span class="built_in">string</span> str1,str2;</div><div class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;k&gt;&gt;str1&gt;&gt;str2)&#123;</div><div class="line">        str1.erase(<span class="number">0</span>,<span class="number">1</span>);</div><div class="line">        str2.erase(str2.end()<span class="number">-1</span>);</div><div class="line">        <span class="built_in">cout</span>&lt;&lt;num_tra(k,str1,str2)&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> 研究生机试备战之旅 </category>
            
            <category> 九度1036-1044 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 大数运算 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[C++ 知识点总结]]></title>
      <url>http://yoursite.com/2017/04/13/c++_prime/</url>
      <content type="html"><![CDATA[<h2 id="读取数量不定的操作符"><a href="#读取数量不定的操作符" class="headerlink" title="读取数量不定的操作符"></a>读取数量不定的操作符</h2><p>文件结束符，输入Ctrl+V，然后输入ENter<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">while</span> (<span class="built_in">std</span>::<span class="built_in">cin</span> &gt;&gt; value) &#123;</div><div class="line">  <span class="comment">/* code */</span></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<a id="more"></a>
<h2 id="字符串string"><a href="#字符串string" class="headerlink" title="字符串string"></a>字符串string</h2><h3 id="常用操作"><a href="#常用操作" class="headerlink" title="常用操作"></a>常用操作</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">  <span class="built_in">string</span> s=<span class="string">"123456789"</span>;</div><div class="line">  s.substr(<span class="number">1</span>,<span class="number">5</span>); <span class="comment">//从1开始取，连续取出5位的字符</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="字符-字符串-与-数字-的转换（待补充）"><a href="#字符-字符串-与-数字-的转换（待补充）" class="headerlink" title="字符/字符串 与 数字 的转换（待补充）"></a>字符/字符串 与 数字 的转换（待补充）</h3><h4 id="字符与数字的转换"><a href="#字符与数字的转换" class="headerlink" title="字符与数字的转换"></a>字符与数字的转换</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">    <span class="keyword">int</span> n = <span class="number">5</span>;</div><div class="line">    <span class="keyword">char</span> c = <span class="string">'8'</span>;</div><div class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="keyword">char</span>(n+<span class="string">'0'</span>)&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="keyword">int</span>(c-<span class="string">'0'</span>)&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="字符串与数字的转换"><a href="#字符串与数字的转换" class="headerlink" title="字符串与数字的转换"></a>字符串与数字的转换</h4><h5 id="数字转字符串：使用sprintf-函数"><a href="#数字转字符串：使用sprintf-函数" class="headerlink" title="数字转字符串：使用sprintf()函数"></a>数字转字符串：使用sprintf()函数</h5><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">char</span> str[<span class="number">10</span>];</div><div class="line"><span class="keyword">int</span> a=<span class="number">1234321</span>;</div><div class="line"><span class="built_in">sprintf</span>(str,<span class="string">"%d"</span>,a);</div><div class="line"></div><div class="line"><span class="keyword">char</span> str[<span class="number">10</span>];</div><div class="line"><span class="keyword">double</span> a=<span class="number">123.321</span>;</div><div class="line"><span class="built_in">sprintf</span>(str,<span class="string">"%.3lf"</span>,a);</div><div class="line"></div><div class="line"><span class="keyword">char</span> str[<span class="number">10</span>];</div><div class="line"><span class="keyword">int</span> a=<span class="number">175</span>;</div><div class="line"><span class="built_in">sprintf</span>(str,<span class="string">"%x"</span>,a);<span class="comment">//10进制转换成16进制，如果输出大写的字母是sprintf(str,"%X",a)</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">char</span> *<span class="title">itoa</span><span class="params">(<span class="keyword">int</span> value, <span class="keyword">char</span>* <span class="built_in">string</span>, <span class="keyword">int</span> radix)</span></span>;</div><div class="line"><span class="comment">//同样也可以将数字转字符串，不过itoa()这个函数是平台相关的（不是标准里的），故在这里不推荐使用这个函数。</span></div></pre></td></tr></table></figure>
<h5 id="字符串转数字：使用sscanf-函数"><a href="#字符串转数字：使用sscanf-函数" class="headerlink" title="字符串转数字：使用sscanf()函数"></a>字符串转数字：使用sscanf()函数</h5><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">char</span> str[]=<span class="string">"1234321"</span>;</div><div class="line"><span class="keyword">int</span> a;</div><div class="line"><span class="built_in">sscanf</span>(str,<span class="string">"%d"</span>,&amp;a);</div><div class="line"></div><div class="line"><span class="keyword">char</span> str[]=<span class="string">"123.321"</span>;</div><div class="line"><span class="keyword">double</span> a;</div><div class="line"><span class="built_in">sscanf</span>(str,<span class="string">"%lf"</span>,&amp;a);</div><div class="line"></div><div class="line"><span class="keyword">char</span> str[]=<span class="string">"AF"</span>;</div><div class="line"><span class="keyword">int</span> a;</div><div class="line"><span class="built_in">sscanf</span>(str,<span class="string">"%x"</span>,&amp;a); <span class="comment">//16进制转换成10进制</span></div></pre></td></tr></table></figure>
<p>另外也可以使用atoi(),atol(),atof().</p>
<h5 id="使用stringstream类"><a href="#使用stringstream类" class="headerlink" title="使用stringstream类"></a>使用stringstream类</h5><p>用ostringstream对象写一个字符串，类似于sprintf()</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sstream&gt;</span></span></div><div class="line"><span class="built_in">ostringstream</span> s1;</div><div class="line"><span class="keyword">int</span> i = <span class="number">22</span>;</div><div class="line">s1 &lt;&lt; <span class="string">"Hello "</span> &lt;&lt; i &lt;&lt; <span class="built_in">endl</span>;</div><div class="line"><span class="built_in">string</span> s2 = s1.str();</div><div class="line"><span class="built_in">cout</span> &lt;&lt; s2;</div></pre></td></tr></table></figure>
<p>用istringstream对象读一个字符串，类似于sscanf()</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sstream&gt;</span></span></div><div class="line"><span class="built_in">istringstream</span> stream1;</div><div class="line"><span class="built_in">string</span> string1 = <span class="string">"25"</span>;</div><div class="line">stream1.str(string1);</div><div class="line"><span class="keyword">int</span> i;</div><div class="line">stream1 &gt;&gt; i;</div><div class="line"><span class="built_in">cout</span> &lt;&lt; i &lt;&lt; <span class="built_in">endl</span>;  <span class="comment">// displays 25</span></div></pre></td></tr></table></figure>
<h2 id="队列与栈"><a href="#队列与栈" class="headerlink" title="队列与栈"></a>队列与栈</h2><p>使用标准库的栈和队列时，先包含相关的头文件</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></div></pre></td></tr></table></figure>
<p>定义栈如下：</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">stack</span>&lt;<span class="keyword">int</span>&gt; stk;</div></pre></td></tr></table></figure>
<p>定义队列如下：</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt; q;</div></pre></td></tr></table></figure>
<p>栈提供了如下的操作</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">s.empty()               <span class="comment">// 如果栈为空返回true，否则返回false  </span></div><div class="line">s.size()                <span class="comment">// 返回栈中元素的个数  </span></div><div class="line">s.pop()                 <span class="comment">// 删除栈顶元素但不返回其值  </span></div><div class="line">s.top()                 <span class="comment">// 返回栈顶的元素，但不删除该元素  </span></div><div class="line">s.push()                <span class="comment">// 在栈顶压入新元素</span></div></pre></td></tr></table></figure>
<p>队提供了如下的操作</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">q.empty()               <span class="comment">// 如果队列为空返回true，否则返回false  </span></div><div class="line">q.size()                <span class="comment">// 返回队列中元素的个数  </span></div><div class="line">q.pop()                 <span class="comment">// 删除队列首元素但不返回其值  </span></div><div class="line">q.front()               <span class="comment">// 返回队首元素的值，但不删除该元素  </span></div><div class="line">q.push()                <span class="comment">// 在队尾压入新元素  </span></div><div class="line">q.back()                <span class="comment">// 返回队列尾元素的值，但不删除该元素</span></div></pre></td></tr></table></figure>
<h3 id="优先队列"><a href="#优先队列" class="headerlink" title="优先队列"></a>优先队列</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">priority_queue&lt;<span class="keyword">int</span>&gt; Q; <span class="comment">//大顶堆，堆顶取得的元素为整个堆的最大元素</span></div><div class="line">priority_queue&lt;<span class="keyword">int</span>,<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;,greater&lt;<span class="keyword">int</span>&gt; &gt; Q;</div><div class="line">                      <span class="comment">//小顶顶堆，堆顶取得的元素为整个堆的最小元素</span></div></pre></td></tr></table></figure>
<h2 id="排序及删除相同元素"><a href="#排序及删除相同元素" class="headerlink" title="排序及删除相同元素"></a>排序及删除相同元素</h2><h3 id="vector与数组"><a href="#vector与数组" class="headerlink" title="vector与数组"></a>vector与数组</h3><h3 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h3><table>
<thead>
<tr>
<th>函数名</th>
<th>功能描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>sort</td>
<td>对给定区间所有元素进行排序</td>
</tr>
<tr>
<td>stable_sort</td>
<td>对给定区间所有元素进行稳定排序</td>
</tr>
<tr>
<td>partial_sort</td>
<td>对给定区间所有元素部分排序</td>
</tr>
<tr>
<td>partial_sort_copy</td>
<td>对给定区间复制并排序</td>
</tr>
<tr>
<td>nth_element</td>
<td>找出给定区间的某个位置对应的元素</td>
</tr>
<tr>
<td>is_sorted</td>
<td>判断一个区间是否已经排好序</td>
</tr>
<tr>
<td>partition</td>
<td>使得符合某个条件的元素放在前面</td>
</tr>
<tr>
<td>stable_partition</td>
<td>相对稳定的使得符合某个条件的元素放在前面</td>
</tr>
</tbody>
</table>
<p>用法如下</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"><span class="keyword">int</span> a[]=&#123;<span class="number">8</span>,<span class="number">8</span>,<span class="number">7</span>,<span class="number">3</span>,<span class="number">7</span>,<span class="number">7</span>&#125;;</div><div class="line">sort(a,a+<span class="number">6</span>);</div><div class="line"></div><div class="line">partial_sort(a,a+<span class="number">6</span>);</div></pre></td></tr></table></figure>
<p>输出为：3 7 7 7 8 8</p>
<h3 id="删除相同元素"><a href="#删除相同元素" class="headerlink" title="删除相同元素"></a>删除相同元素</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line">、、、、、、、、、、、、、、、、、、、、、、、、</div></pre></td></tr></table></figure>
<p>输出为：3 7 7 7 8 8</p>
<h2 id="抽象容器——vector-list-deque"><a href="#抽象容器——vector-list-deque" class="headerlink" title="抽象容器——vector list deque"></a>抽象容器——vector list deque</h2><p>vector：</p>
<p>list：</p>
<p>deque：</p>
<h2 id="cout输出double控制精度"><a href="#cout输出double控制精度" class="headerlink" title="cout输出double控制精度"></a>cout输出double控制精度</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iomanip&gt;</span></span></div><div class="line"><span class="keyword">double</span> ans=<span class="number">1.1</span>;</div><div class="line"><span class="built_in">cout</span>&lt;&lt;fixed&lt;&lt;setprecision(<span class="number">3</span>)&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</div></pre></td></tr></table></figure>
<h2 id="结构体struct"><a href="#结构体struct" class="headerlink" title="结构体struct"></a>结构体struct</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"></div><div class="line"><span class="keyword">struct</span> JavaBean&#123;</div><div class="line">    <span class="keyword">int</span> j;</div><div class="line">    <span class="keyword">int</span> f;</div><div class="line">    <span class="keyword">double</span> s; <span class="comment">//j/f</span></div><div class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (<span class="keyword">const</span> JavaBean &amp;A) <span class="keyword">const</span>&#123;</div><div class="line">        <span class="keyword">return</span> s&gt;A.s;</div><div class="line">    &#125;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<p>若使用sort，运算符重载必须重载“&lt;”</p>
<h2 id="队列"><a href="#队列" class="headerlink" title="队列"></a>队列</h2>]]></content>
      
        <categories>
            
            <category> 研究生机试备战之旅 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> c++ </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Jobdu 1000-1010（未完待续）]]></title>
      <url>http://yoursite.com/2017/04/11/jobdu1000-1014/</url>
      <content type="html"><![CDATA[<p>注：<strong><a href="http://ac.jobdu.com/problemset.php" target="_blank" rel="external">以下题目来源于九度</a></strong></p>
<h2 id="题目1000"><a href="#题目1000" class="headerlink" title="题目1000"></a><strong>题目1000</strong></h2><h3 id="题目描述："><a href="#题目描述：" class="headerlink" title="题目描述："></a>题目描述：</h3><p>求整数a，b的和。</p>
<h3 id="输入："><a href="#输入：" class="headerlink" title="输入："></a>输入：</h3><p>测试案例有多行，每行为a，b的值。</p>
<h3 id="输出："><a href="#输出：" class="headerlink" title="输出："></a>输出：</h3><p>输出多行，对应a+b的结果。<br><a id="more"></a></p>
<h3 id="样例输入："><a href="#样例输入：" class="headerlink" title="样例输入："></a>样例输入：</h3><p>1 2<br>4 5<br>6 9</p>
<h3 id="样例输出："><a href="#样例输出：" class="headerlink" title="样例输出："></a>样例输出：</h3><p>3<br>9<br>15</p>
<h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><p>这道题就是用到了文件的结束标识符：EOF，在windows下是ctrl+z，在命令行窗口运行遇到文件结束符才结束的程序时，到该结束时，先按一下回车，再按ctrl+z，再按回车就好了。</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">    <span class="keyword">int</span> a,b;</div><div class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;a,&amp;b)!=EOF)&#123;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,a+b);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="题目1001"><a href="#题目1001" class="headerlink" title="题目1001"></a><strong>题目1001</strong></h2><h3 id="题目描述：-1"><a href="#题目描述：-1" class="headerlink" title="题目描述："></a>题目描述：</h3><p>This time, you are supposed to find A+B where A and B are two matrices, and then count the number of zero rows and columns.</p>
<h3 id="输入：-1"><a href="#输入：-1" class="headerlink" title="输入："></a>输入：</h3><p>The input consists of several test cases, each starts with a pair of positive integers M and N (≤10) which are the number of rows and columns of the matrices, respectively. Then 2*M lines follow, each contains N integers in [-100, 100], separated by a space. The first M lines correspond to the elements of A and the second M lines to that of B.</p>
<p>The input is terminated by a zero M and that case must NOT be processed.</p>
<h3 id="输出：-1"><a href="#输出：-1" class="headerlink" title="输出："></a>输出：</h3><p>For each test case you should output in one line the total number of zero rows and columns of A+B.</p>
<h3 id="样例输入：-1"><a href="#样例输入：-1" class="headerlink" title="样例输入："></a>样例输入：</h3><p>2 2<br>1 1<br>1 1<br>-1 -1<br>10 9<br>2 3<br>1 2 3<br>4 5 6<br>-1 -2 -3<br>-4 -5 -6<br>0</p>
<h3 id="样例输出：-1"><a href="#样例输出：-1" class="headerlink" title="样例输出："></a>样例输出：</h3><p>1<br>5</p>
<h3 id="代码：-1"><a href="#代码：-1" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">    <span class="keyword">int</span> m,n;</div><div class="line">    <span class="keyword">int</span> i,j,k;</div><div class="line">    <span class="keyword">while</span>(<span class="number">1</span>)&#123;</div><div class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;m);</div><div class="line">        <span class="keyword">if</span>(m==<span class="number">0</span>)</div><div class="line">            <span class="keyword">break</span>;</div><div class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</div><div class="line">        <span class="keyword">int</span> a[m][n][<span class="number">2</span>],b[m][n];</div><div class="line">        <span class="keyword">int</span> num=<span class="number">0</span>,r;</div><div class="line">        <span class="comment">// 读取数据</span></div><div class="line">        <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">2</span>;i++)&#123;</div><div class="line">            <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;m;j++)&#123;</div><div class="line">                <span class="keyword">for</span>(k=<span class="number">0</span>;k&lt;n;k++)&#123;</div><div class="line">                    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[j][k][i]);</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="comment">// 相加</span></div><div class="line">        <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;m;j++)&#123;</div><div class="line">            <span class="keyword">for</span>(k=<span class="number">0</span>;k&lt;n;k++)&#123;</div><div class="line">                b[j][k]=a[j][k][<span class="number">0</span>]+a[j][k][<span class="number">1</span>];</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="comment">// 判断为0的行</span></div><div class="line">        <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;m;j++)&#123;</div><div class="line">            r=<span class="number">0</span>;</div><div class="line">            <span class="keyword">for</span>(k=<span class="number">0</span>;k&lt;n;k++)&#123;</div><div class="line">                <span class="keyword">if</span>(b[j][k]!=<span class="number">0</span>)</div><div class="line">                    r=<span class="number">1</span>;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">if</span>(r==<span class="number">0</span>)&#123;</div><div class="line">                num++;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="comment">// 判断为0的列</span></div><div class="line">        <span class="keyword">for</span>(k=<span class="number">0</span>;k&lt;n;k++)&#123;</div><div class="line">            r=<span class="number">0</span>;</div><div class="line">            <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;m;j++)&#123;</div><div class="line">                <span class="keyword">if</span>(b[j][k]!=<span class="number">0</span>)</div><div class="line">                    r=<span class="number">1</span>;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">if</span>(r==<span class="number">0</span>)&#123;</div><div class="line">                num++;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,num);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="题目1002"><a href="#题目1002" class="headerlink" title="题目1002"></a><strong>题目1002</strong></h2><h3 id="题目描述：-2"><a href="#题目描述：-2" class="headerlink" title="题目描述："></a>题目描述：</h3><p>Grading hundreds of thousands of Graduate Entrance Exams is a hard work. It is even harder to design a process to make the results as fair as possible. One way is to assign each exam problem to 3 independent experts. If they do not agree to each other, a judge is invited to make the final decision. Now you are asked to write a program to help this process.</p>
<p>For each problem, there is a full-mark P and a tolerance T(\&lt;P) given. The grading rules are:</p>
<ul>
<li>A problem will first be assigned to 2 experts, to obtain G1 and G2. If the difference is within the tolerance, that is, if |G1 - G2| ≤ T, this problem’s grade will be the average of G1 and G2.</li>
<li>If the difference exceeds T, the 3rd expert will give G3.</li>
<li><font color="#0099ff"><strong>If G3 is within the tolerance with either G1 or G2</strong></font>, but NOT both, then this problem’s grade will be the average of G3 and the closest grade.</li>
<li>If G3 is within the tolerance with both G1 and G2, then this problem’s grade will be the maximum of the three grades.</li>
<li>If G3 is within the tolerance with neither G1 nor G2, a judge will give the final grade GJ.</li>
</ul>
<h3 id="输入：-2"><a href="#输入：-2" class="headerlink" title="输入："></a>输入：</h3><p>Each input file may contain more than one test case.<br>Each case occupies a line containing six positive integers: P, T, G1, G2, G3, and GJ, as described in the problem. It is guaranteed that all the grades are valid, that is, in the interval [0, P].</p>
<h3 id="输出：-2"><a href="#输出：-2" class="headerlink" title="输出："></a>输出：</h3><p>For each test case you should output the final grade of the problem in a line. The answer must be accurate to 1 decimal place.</p>
<h3 id="样例输入：-2"><a href="#样例输入：-2" class="headerlink" title="样例输入："></a>样例输入：</h3><p>20 2 15 13 10 18</p>
<h3 id="样例输出：-2"><a href="#样例输出：-2" class="headerlink" title="样例输出："></a>样例输出：</h3><p>14.0</p>
<h3 id="代码：-2"><a href="#代码：-2" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;math.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">max</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</div><div class="line">    <span class="keyword">if</span>(a&gt;b)</div><div class="line">        <span class="keyword">return</span> a;</div><div class="line">    <span class="keyword">else</span></div><div class="line">        <span class="keyword">return</span> b;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">    <span class="keyword">int</span> p,t,g1,g2,g3,gj;</div><div class="line">    <span class="keyword">float</span> result;</div><div class="line">    <span class="comment">// while(scanf("%d %d %d %d %d %d",&amp;p,&amp;t,&amp;g1,&amp;g2,&amp;g3,&amp;gj)!=EOF)&#123;</span></div><div class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;p)!=EOF)&#123;</div><div class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d%d%d%d"</span>,&amp;t,&amp;g1,&amp;g2,&amp;g3,&amp;gj);</div><div class="line">        <span class="keyword">if</span>(<span class="built_in">abs</span>(g1-g2)&lt;=t)&#123;</div><div class="line">            result=(g1+g2)/<span class="number">2.0</span>;</div><div class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">abs</span>(g1-g3)&gt;t &amp;&amp; <span class="built_in">abs</span>(g2-g3)&gt;t)&#123;</div><div class="line">            result=gj;</div><div class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">abs</span>(g1-g3)&lt;=t &amp;&amp; <span class="built_in">abs</span>(g2-g3)&lt;=t)&#123;</div><div class="line">            result=max(g1,g2);</div><div class="line">        &#125;<span class="keyword">else</span>&#123;</div><div class="line">            <span class="keyword">if</span>(<span class="built_in">abs</span>(g1-g3)&gt;<span class="built_in">abs</span>(g2-g3))</div><div class="line">                result=(g2+g3)/<span class="number">2.0</span>;</div><div class="line">            <span class="keyword">else</span></div><div class="line">                result=(g1+g3)/<span class="number">2.0</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%.1f\n"</span>,result*<span class="number">1.0</span>);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="题目1003"><a href="#题目1003" class="headerlink" title="题目1003"></a><strong>题目1003</strong></h2><h3 id="题目描述：-3"><a href="#题目描述：-3" class="headerlink" title="题目描述："></a>题目描述：</h3><p>给定两个整数A和B，其表示形式是：从个位开始，每三位数用逗号”,”隔开。</p>
<p>现在请计算A+B的结果，并以正常形式输出。</p>
<h3 id="输入：-3"><a href="#输入：-3" class="headerlink" title="输入："></a>输入：</h3><p>输入包含多组数据数据，每组数据占一行，由两个整数A和B组成（-10^9 &lt; A,B &lt; 10^9）。</p>
<h3 id="输出：-3"><a href="#输出：-3" class="headerlink" title="输出："></a>输出：</h3><p>请计算A+B的结果，并以正常形式输出，每组数据占一行。</p>
<h3 id="样例输入：-3"><a href="#样例输入：-3" class="headerlink" title="样例输入："></a>样例输入：</h3><p>-234,567,890 123,456,789<br>1,234 2,345,678</p>
<h3 id="样例输出：-3"><a href="#样例输出：-3" class="headerlink" title="样例输出："></a>样例输出：</h3><p>-111111101<br>2346912</p>
<h3 id="代码：-3"><a href="#代码：-3" class="headerlink" title="代码："></a>代码：</h3><p>注：直接读取数字，运行错误（原因未知）<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;math.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">pow</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</div><div class="line">    <span class="keyword">if</span>(a==<span class="number">0</span>)</div><div class="line">        <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">    <span class="keyword">if</span>(b==<span class="number">0</span>)</div><div class="line">        <span class="keyword">return</span> <span class="number">1</span>;</div><div class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(b==<span class="number">1</span>)</div><div class="line">        <span class="keyword">return</span> a;</div><div class="line">    <span class="keyword">else</span>&#123;</div><div class="line">        <span class="keyword">return</span> a*<span class="built_in">pow</span>(a,b<span class="number">-1</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">    <span class="keyword">long</span> <span class="keyword">int</span> len=<span class="number">10</span>;</div><div class="line">    <span class="keyword">long</span> <span class="keyword">int</span> a[len],b[len];</div><div class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[<span class="number">0</span>])!=EOF)&#123;</div><div class="line">        <span class="keyword">long</span> <span class="keyword">int</span> int_a=<span class="number">0</span>,int_b=<span class="number">0</span>;</div><div class="line">        <span class="keyword">long</span> <span class="keyword">int</span> num_a=<span class="number">1</span>,num_b=<span class="number">0</span>,i;</div><div class="line">        <span class="keyword">char</span> c;</div><div class="line"></div><div class="line">        <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;len;i++)&#123;</div><div class="line">            c=getchar();</div><div class="line">            <span class="keyword">if</span>(c==<span class="string">' '</span>||c==<span class="string">'\n'</span>)</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]); <span class="comment">//错误，当i从1开始时结果遗异常</span></div><div class="line">            num_a++;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;num_a;i++)</div><div class="line">            int_a+=<span class="built_in">abs</span>(a[i])*<span class="built_in">pow</span>(<span class="number">10</span>,(num_a-i<span class="number">-1</span>)*<span class="number">3</span>);</div><div class="line">        <span class="keyword">if</span>(a[<span class="number">0</span>]&lt;<span class="number">0</span>)</div><div class="line">            int_a=-int_a;</div><div class="line"></div><div class="line">        <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;len;i++)&#123;</div><div class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;b[i]);</div><div class="line">            num_b++;</div><div class="line">            c=getchar();</div><div class="line">            <span class="keyword">if</span>(c==<span class="string">' '</span>||c==<span class="string">'\n'</span>)</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;num_b;i++)</div><div class="line">            int_b+=<span class="built_in">abs</span>(b[i])*<span class="built_in">pow</span>(<span class="number">10</span>,(num_b-i<span class="number">-1</span>)*<span class="number">3</span>);</div><div class="line">        <span class="keyword">if</span>(b[<span class="number">0</span>]&lt;<span class="number">0</span>)</div><div class="line">            int_b=-int_b;</div><div class="line"></div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,int_a+int_b);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>注：读取两个字符串再转为数字，正确<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;  </span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;  </span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;  </span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;  </span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;  </div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">reverse</span><span class="params">(<span class="built_in">string</span> a)</span>  </span></div><div class="line">&#123;  </div><div class="line">    <span class="keyword">int</span> x=<span class="number">0</span>;  </div><div class="line">    <span class="keyword">if</span>(a[<span class="number">0</span>]==<span class="string">'-'</span>)  </div><div class="line">    &#123;  </div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;a.length();i++)  </div><div class="line">            <span class="keyword">if</span>(a[i]&gt;=<span class="string">'0'</span>&amp;&amp;a[i]&lt;=<span class="string">'9'</span>)  </div><div class="line">                x = x*<span class="number">10</span>+a[i]-<span class="string">'0'</span>;  </div><div class="line">        x = -x;  </div><div class="line">    &#125;  </div><div class="line">    <span class="keyword">else</span>  </div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;a.length();i++)  </div><div class="line">            <span class="keyword">if</span>(a[i]&gt;=<span class="string">'0'</span>&amp;&amp;a[i]&lt;=<span class="string">'9'</span>)  </div><div class="line">                x = x*<span class="number">10</span>+a[i]-<span class="string">'0'</span>;  </div><div class="line">    <span class="keyword">return</span> x;  </div><div class="line">&#125;  </div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span>  </span></div><div class="line">&#123;  </div><div class="line"></div><div class="line">    <span class="built_in">string</span> a,b;  </div><div class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;a&gt;&gt;b)  </div><div class="line">    &#123;  </div><div class="line">        <span class="built_in">cout</span>&lt;&lt;reverse(a)+reverse(b)&lt;&lt;<span class="built_in">endl</span>;  </div><div class="line">    &#125;  </div><div class="line"></div><div class="line"></div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;  </div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> 研究生机试备战之旅 </category>
            
            <category> 九度1000-1014 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Issue 772：Police And The Thief]]></title>
      <url>http://yoursite.com/2017/04/09/issue772/</url>
      <content type="html"><![CDATA[<p>首先我们定义Police和Thief之间的曼哈顿距离dis = |xp - xt| + |yp - yt|</p>
<p>作为一个聪明的小偷，他每次的行动会尽可能的使dis增大，而作为一个牛B的警察，他每次的行动会尽可能使dis减小</p>
<p>当然，由于小偷和警察的关系是小偷被警察追着跑</p>
<p>所以要使警察每次使dis-1并不难…<br><a id="more"></a><br>现在考虑小偷的面临的局面，若他在这个地图的非边界位置，他每次都可以使dis + 1,而警察会使dis - 1</p>
<p>若小偷在地图的边界位置上，小偷会遇到 不得不使dis - 1 ,而警察又会使dis - 1.这样,dis - 2了…….</p>
<p>在可预见的未来，我们知道，小偷和警察最后的位置应该只会有两种情况：</p>
<ol>
<li>小偷和警察相邻;</li>
<li>小偷和警察对角相邻;(即在一个2*2的矩阵中，比如一个人在左上角，一个人在右下角，即为对角相邻)</li>
</ol>
<p>现在我们考虑谁先手的问题。</p>
<p>若小偷先手，二者相邻的话，小偷是不会被抓住的；二者若对角相邻，反之。</p>
<p>同理可得警察先手的情况。</p>
<p>整体思路为上所述，但是还是要考虑一些特殊情况：</p>
<ol>
<li>二者一开始就在一起；</li>
<li>地图的形状很特殊：n<em>1或1</em>m的</li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div></pre></td><td class="code"><pre><div class="line">/*</div><div class="line"> *  Prob:   Police and the thief</div><div class="line"> *  LANG:   C++</div><div class="line">*/</div><div class="line">#include&lt;cstdio&gt;</div><div class="line">#include&lt;cstring&gt;</div><div class="line">#include&lt;cmath&gt;</div><div class="line">using namespace std;</div><div class="line"></div><div class="line">const char THIEF[6] = &quot;thief&quot;;</div><div class="line"></div><div class="line">int T , n , m;</div><div class="line">int xp , yp , xt , yt;</div><div class="line">char str[20];</div><div class="line"></div><div class="line">int main()</div><div class="line">&#123;</div><div class="line">    scanf(&quot;%d&quot; , &amp;T);</div><div class="line">    for (int i = 0;i &lt; T;i ++)</div><div class="line">    &#123;</div><div class="line">        scanf(&quot;%d%d&quot; , &amp;n , &amp;m);</div><div class="line">        scanf(&quot;%d%d%d%d&quot; , &amp;xp , &amp;yp , &amp;xt , &amp;yt);</div><div class="line">        scanf(&quot;%s&quot; , str);</div><div class="line">        int delta = abs(xp - xt) + abs(yp - yt);</div><div class="line"></div><div class="line">        if ((xp == xt) &amp;&amp; (yp == yt))</div><div class="line">        &#123;</div><div class="line">            printf(&quot;YES\n&quot;);</div><div class="line">            continue;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        if (n == 1 || m == 1)</div><div class="line">        &#123;</div><div class="line">            //if (delta % 2 == 0)</div><div class="line">                printf(&quot;YES\n&quot;);</div><div class="line">            /*</div><div class="line">            else</div><div class="line">                printf(&quot;NO\n&quot;);</div><div class="line">            */</div><div class="line">            continue;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        if (strcmp(str , THIEF) == 0)</div><div class="line">        &#123;</div><div class="line">            if (delta % 2 == 0)</div><div class="line">                printf(&quot;YES\n&quot;);</div><div class="line">            else</div><div class="line">                printf(&quot;NO\n&quot;);</div><div class="line">        &#125;</div><div class="line">        else</div><div class="line">        &#123;</div><div class="line">            if (delta % 2 == 0)</div><div class="line">                printf(&quot;NO\n&quot;);</div><div class="line">            else</div><div class="line">                printf(&quot;YES\n&quot;);</div><div class="line">        &#125;</div><div class="line">    &#125;   //for i _ T</div><div class="line"></div><div class="line">    return 0;</div><div class="line">&#125;   //main</div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> ACM </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 博弈论 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>http://yoursite.com/2017/04/03/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<a id="more"></a>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
      
        <categories>
            
            <category> Testing </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Testing </tag>
            
            <tag> Another Tag </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
